Nonterminals useless in grammar

    interface_name


Terminals unused in grammar

    T_UNKNOWN


Rules useless in grammar

  243 interface_name: scoped_name


Grammar

    0 $accept: specification $end

    1 specification: %empty
    2              | definitions

    3 definitions: definition
    4            | definition definitions

    5 definition: type_dcl T_SEMICOLON
    6           | const_dcl T_SEMICOLON
    7           | except_dcl T_SEMICOLON
    8           | interface T_SEMICOLON
    9           | module T_SEMICOLON
   10           | value T_SEMICOLON

   11 $@1: %empty

   12 module: T_MODULE T_IDENTIFIER T_LEFT_CURLY_BRACKET $@1 definitions T_RIGHT_CURLY_BRACKET

   13 interface: interface_dcl
   14          | forward_dcl

   15 interface_dcl: interface_header T_LEFT_CURLY_BRACKET interface_body T_RIGHT_CURLY_BRACKET

   16 forward_dcl: T_INTERFACE T_IDENTIFIER
   17            | T_ABSTRACT T_INTERFACE T_IDENTIFIER

   18 interface_header: T_INTERFACE T_IDENTIFIER
   19                 | T_INTERFACE T_IDENTIFIER interface_inheritance_spec
   20                 | T_ABSTRACT T_INTERFACE T_IDENTIFIER
   21                 | T_ABSTRACT T_INTERFACE T_IDENTIFIER interface_inheritance_spec

   22 interface_body: %empty
   23               | exports

   24 exports: export
   25        | export exports

   26 export: type_dcl T_SEMICOLON
   27       | const_dcl T_SEMICOLON
   28       | except_dcl T_SEMICOLON
   29       | attr_dcl T_SEMICOLON
   30       | op_dcl T_SEMICOLON

   31 interface_inheritance_spec: T_COLON interface_names

   32 interface_names: scoped_names

   33 scoped_names: scoped_name
   34             | scoped_name T_COMMA scoped_names

   35 scoped_name: T_IDENTIFIER
   36            | T_SCOPE T_IDENTIFIER
   37            | scoped_name T_SCOPE T_IDENTIFIER

   38 value: value_dcl
   39      | value_abs_dcl
   40      | value_box_dcl
   41      | value_forward_dcl

   42 value_forward_dcl: T_VALUETYPE T_IDENTIFIER
   43                  | T_ABSTRACT T_VALUETYPE T_IDENTIFIER

   44 value_box_dcl: T_VALUETYPE T_IDENTIFIER type_spec

   45 value_abs_dcl: T_ABSTRACT T_VALUETYPE T_IDENTIFIER T_LEFT_CURLY_BRACKET value_body T_RIGHT_CURLY_BRACKET
   46              | T_ABSTRACT T_VALUETYPE T_IDENTIFIER value_inheritance_spec T_LEFT_CURLY_BRACKET value_body T_RIGHT_CURLY_BRACKET

   47 value_body: %empty
   48           | exports

   49 value_dcl: value_header T_LEFT_CURLY_BRACKET value_elements T_RIGHT_CURLY_BRACKET
   50          | value_header T_LEFT_CURLY_BRACKET T_RIGHT_CURLY_BRACKET

   51 value_elements: value_element
   52               | value_element value_elements

   53 value_header: T_VALUETYPE T_IDENTIFIER value_inheritance_spec
   54             | T_CUSTOM T_VALUETYPE T_IDENTIFIER value_inheritance_spec
   55             | T_VALUETYPE T_IDENTIFIER
   56             | T_CUSTOM T_VALUETYPE T_IDENTIFIER

   57 value_inheritance_spec: T_COLON value_inheritance_bases
   58                       | T_COLON value_inheritance_bases T_SUPPORTS interface_names
   59                       | T_SUPPORTS interface_names

   60 value_inheritance_bases: value_name
   61                        | value_name T_COMMA value_names
   62                        | T_TRUNCATABLE value_name
   63                        | T_TRUNCATABLE value_name T_COMMA value_names

   64 value_names: scoped_names

   65 value_name: scoped_name

   66 value_element: export
   67              | state_member
   68              | init_dcl

   69 state_member: T_PUBLIC type_spec declarators T_SEMICOLON
   70             | T_PRIVATE type_spec declarators T_SEMICOLON

   71 init_dcl: T_FACTORY T_IDENTIFIER T_LEFT_PARANTHESIS init_param_decls T_RIGHT_PARANTHESIS T_SEMICOLON

   72 init_param_decls: init_param_decl
   73                 | init_param_decl T_COMMA init_param_decls

   74 init_param_decl: init_param_attribute param_type_spec simple_declarator

   75 init_param_attribute: T_IN

   76 const_dcl: T_CONST const_type T_IDENTIFIER T_EQUAL const_exp

   77 const_type: integer_type
   78           | char_type
   79           | wide_char_type
   80           | boolean_type
   81           | floating_pt_type
   82           | string_type
   83           | wide_string_type
   84           | fixed_pt_const_type
   85           | scoped_name
   86           | octet_type

   87 const_exp: or_expr

   88 or_expr: xor_expr
   89        | or_expr T_VERTICAL_LINE xor_expr

   90 xor_expr: and_expr
   91         | xor_expr T_CIRCUMFLEX and_expr

   92 and_expr: shift_expr
   93         | and_expr T_AMPERSAND shift_expr

   94 shift_expr: add_expr
   95           | shift_expr T_SHIFTRIGHT add_expr
   96           | shift_expr T_SHIFTLEFT add_expr

   97 add_expr: mult_expr
   98         | add_expr T_PLUS_SIGN mult_expr
   99         | add_expr T_MINUS_SIGN mult_expr

  100 mult_expr: unary_expr
  101          | mult_expr T_ASTERISK unary_expr
  102          | mult_expr T_SOLIDUS unary_expr
  103          | mult_expr T_PERCENT_SIGN unary_expr

  104 unary_expr: T_MINUS_SIGN primary_expr
  105           | T_PLUS_SIGN primary_expr
  106           | T_TILDE primary_expr
  107           | primary_expr

  108 primary_expr: scoped_name
  109             | literal
  110             | T_LEFT_PARANTHESIS const_exp T_RIGHT_PARANTHESIS

  111 literal: T_INTEGER_LITERAL
  112        | T_string_literal
  113        | T_CHARACTER_LITERAL
  114        | T_FIXED_PT_LITERAL
  115        | T_FLOATING_PT_LITERAL
  116        | T_TRUE
  117        | T_FALSE

  118 positive_int_const: const_exp

  119 type_dcl: T_TYPEDEF type_spec declarators
  120         | struct_type
  121         | union_type
  122         | enum_type
  123         | T_NATIVE simple_declarator

  124 type_spec: simple_type_spec
  125          | constr_type_spec

  126 simple_type_spec: base_type_spec
  127                 | template_type_spec
  128                 | scoped_name

  129 base_type_spec: floating_pt_type
  130               | integer_type
  131               | char_type
  132               | wide_char_type
  133               | boolean_type
  134               | octet_type
  135               | any_type
  136               | object_type
  137               | value_base_type
  138               | principal_type

  139 template_type_spec: sequence_type
  140                   | string_type
  141                   | wide_string_type
  142                   | fixed_pt_type

  143 constr_type_spec: struct_type
  144                 | union_type
  145                 | enum_type

  146 declarators: declarator
  147            | declarator T_COMMA declarators

  148 declarator: simple_declarator
  149           | complex_declarator

  150 simple_declarator: T_IDENTIFIER

  151 complex_declarator: array_declarator

  152 floating_pt_type: T_FLOAT
  153                 | T_DOUBLE
  154                 | T_LONG T_DOUBLE

  155 integer_type: signed_int
  156             | unsigned_int

  157 signed_int: signed_long_int
  158           | signed_short_int
  159           | signed_longlong_int

  160 signed_short_int: T_SHORT

  161 signed_long_int: T_LONG

  162 signed_longlong_int: T_LONG T_LONG

  163 unsigned_int: unsigned_long_int
  164             | unsigned_short_int
  165             | unsigned_longlong_int

  166 unsigned_short_int: T_UNSIGNED T_SHORT

  167 unsigned_long_int: T_UNSIGNED T_LONG

  168 unsigned_longlong_int: T_UNSIGNED T_LONG T_LONG

  169 char_type: T_CHAR

  170 wide_char_type: T_WCHAR

  171 boolean_type: T_BOOLEAN

  172 octet_type: T_OCTET

  173 any_type: T_ANY

  174 object_type: T_OBJECT

  175 struct_type: T_STRUCT T_IDENTIFIER T_LEFT_CURLY_BRACKET member_list T_RIGHT_CURLY_BRACKET

  176 member_list: member
  177            | member member_list

  178 member: type_spec declarators T_SEMICOLON

  179 union_type: T_UNION T_IDENTIFIER T_SWITCH T_LEFT_PARANTHESIS switch_type_spec T_RIGHT_PARANTHESIS T_LEFT_CURLY_BRACKET switch_body T_RIGHT_CURLY_BRACKET

  180 switch_type_spec: integer_type
  181                 | char_type
  182                 | boolean_type
  183                 | enum_type
  184                 | scoped_name

  185 switch_body: case
  186            | case switch_body

  187 case: case_label case
  188     | case_label element_spec T_SEMICOLON
  189     | case_label T_PRAGMA element_spec T_SEMICOLON

  190 case_label: T_CASE const_exp T_COLON
  191           | T_DEFAULT T_COLON

  192 element_spec: type_spec declarator

  193 enum_type: T_ENUM T_IDENTIFIER T_LEFT_CURLY_BRACKET enumerators T_RIGHT_CURLY_BRACKET

  194 enumerators: enumerator
  195            | enumerator T_COMMA enumerators

  196 enumerator: T_IDENTIFIER

  197 sequence_type: T_SEQUENCE T_LESS_THAN_SIGN simple_type_spec T_COMMA positive_int_const T_GREATER_THAN_SIGN
  198              | T_SEQUENCE T_LESS_THAN_SIGN simple_type_spec T_GREATER_THAN_SIGN

  199 string_type: T_STRING T_LESS_THAN_SIGN positive_int_const T_GREATER_THAN_SIGN
  200            | T_STRING

  201 wide_string_type: T_WSTRING T_LESS_THAN_SIGN positive_int_const T_GREATER_THAN_SIGN
  202                 | T_WSTRING

  203 array_declarator: T_IDENTIFIER fixed_array_sizes

  204 fixed_array_sizes: fixed_array_size
  205                  | fixed_array_size fixed_array_sizes

  206 fixed_array_size: T_LEFT_SQUARE_BRACKET positive_int_const T_RIGHT_SQUARE_BRACKET

  207 attr_dcl: T_ATTRIBUTE param_type_spec simple_declarators
  208         | T_READONLY T_ATTRIBUTE param_type_spec simple_declarators

  209 simple_declarators: simple_declarator
  210                   | simple_declarator T_COMMA simple_declarators

  211 except_dcl: T_EXCEPTION T_IDENTIFIER T_LEFT_CURLY_BRACKET members T_RIGHT_CURLY_BRACKET

  212 members: %empty
  213        | member members

  214 op_dcl: op_attribute op_type_spec T_IDENTIFIER parameter_dcls raises_expr context_expr

  215 op_attribute: %empty
  216             | T_ONEWAY

  217 op_type_spec: param_type_spec
  218             | T_VOID

  219 parameter_dcls: T_LEFT_PARANTHESIS param_dcls T_RIGHT_PARANTHESIS
  220               | T_LEFT_PARANTHESIS T_RIGHT_PARANTHESIS

  221 param_dcls: param_dcl
  222           | param_dcl T_COMMA param_dcls

  223 param_dcl: param_attribute param_type_spec simple_declarator

  224 param_attribute: T_IN
  225                | T_OUT
  226                | T_INOUT

  227 raises_expr: %empty
  228            | T_RAISES T_LEFT_PARANTHESIS scoped_names T_RIGHT_PARANTHESIS

  229 context_expr: %empty
  230             | T_CONTEXT T_LEFT_PARANTHESIS string_literals T_RIGHT_PARANTHESIS

  231 string_literals: T_string_literal
  232                | T_string_literal T_COMMA string_literals

  233 T_string_literal: T_STRING_LITERAL
  234                 | T_STRING_LITERAL T_string_literal

  235 param_type_spec: base_type_spec
  236                | string_type
  237                | wide_string_type
  238                | scoped_name

  239 fixed_pt_type: T_FIXED T_LESS_THAN_SIGN positive_int_const T_COMMA T_INTEGER_LITERAL T_GREATER_THAN_SIGN

  240 fixed_pt_const_type: T_FIXED

  241 value_base_type: T_VALUEBASE

  242 principal_type: T_PRINCIPAL


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    T_AMPERSAND (258) 93
    T_ANY (259) 173
    T_ASTERISK (260) 101
    T_ATTRIBUTE (261) 207 208
    T_BOOLEAN (262) 171
    T_CASE (263) 190
    T_CHAR (264) 169
    T_CHARACTER_LITERAL <std::string> (265) 113
    T_CIRCUMFLEX (266) 91
    T_COLON (267) 31 57 58 190 191
    T_COMMA (268) 34 61 63 73 147 195 197 210 222 232 239
    T_CONST (269) 76
    T_CONTEXT (270) 230
    T_DEFAULT (271) 191
    T_DOUBLE (272) 153 154
    T_ENUM (273) 193
    T_EQUAL (274) 76
    T_EXCEPTION (275) 211
    T_FALSE (276) 117
    T_FIXED (277) 239 240
    T_FIXED_PT_LITERAL <std::string> (278) 114
    T_FLOAT (279) 152
    T_FLOATING_PT_LITERAL <std::string> (280) 115
    T_GREATER_THAN_SIGN (281) 197 198 199 201 239
    T_IDENTIFIER <std::string> (282) 12 16 17 18 19 20 21 35 36 37 42 43 44 45 46 53 54 55 56 71 76 150 175 179 193 196 203 211 214
    T_IN (283) 75 224
    T_INOUT (284) 226
    T_INTEGER_LITERAL <std::string> (285) 111 239
    T_INTERFACE (286) 16 17 18 19 20 21
    T_LEFT_CURLY_BRACKET (287) 12 15 45 46 49 50 175 179 193 211
    T_LEFT_PARANTHESIS (288) 71 110 179 219 220 228 230
    T_LEFT_SQUARE_BRACKET (289) 206
    T_LESS_THAN_SIGN (290) 197 198 199 201 239
    T_LONG (291) 154 161 162 167 168
    T_MINUS_SIGN (292) 99 104
    T_MODULE (293) 12
    T_OCTET (294) 172
    T_ONEWAY (295) 216
    T_OUT (296) 225
    T_PERCENT_SIGN (297) 103
    T_PLUS_SIGN (298) 98 105
    T_PRINCIPAL (299) 242
    T_RAISES (300) 228
    T_READONLY (301) 208
    T_RIGHT_CURLY_BRACKET (302) 12 15 45 46 49 50 175 179 193 211
    T_RIGHT_PARANTHESIS (303) 71 110 179 219 220 228 230
    T_RIGHT_SQUARE_BRACKET (304) 206
    T_SCOPE (305) 36 37
    T_SEMICOLON (306) 5 6 7 8 9 10 26 27 28 29 30 69 70 71 178 188 189
    T_SEQUENCE (307) 197 198
    T_SHIFTLEFT (308) 96
    T_SHIFTRIGHT (309) 95
    T_SHORT (310) 160 166
    T_SOLIDUS (311) 102
    T_STRING (312) 199 200
    T_STRING_LITERAL <std::string> (313) 233 234
    T_PRAGMA <std::string> (314) 189
    T_STRUCT (315) 175
    T_SWITCH (316) 179
    T_TILDE (317) 106
    T_TRUE (318) 116
    T_OBJECT (319) 174
    T_TYPEDEF (320) 119
    T_UNION (321) 179
    T_UNSIGNED (322) 166 167 168
    T_VERTICAL_LINE (323) 89
    T_VOID (324) 218
    T_WCHAR (325) 170
    T_WSTRING (326) 201 202
    T_UNKNOWN (327)
    T_ABSTRACT (328) 17 20 21 43 45 46
    T_VALUETYPE (329) 42 43 44 45 46 53 54 55 56
    T_TRUNCATABLE (330) 62 63
    T_SUPPORTS (331) 58 59
    T_CUSTOM (332) 54 56
    T_PUBLIC (333) 69
    T_PRIVATE (334) 70
    T_FACTORY (335) 71
    T_NATIVE (336) 123
    T_VALUEBASE (337) 241


Nonterminals, with rules where they appear

    $accept (83)
        on left: 0
    specification (84)
        on left: 1 2
        on right: 0
    definitions (85)
        on left: 3 4
        on right: 2 4 12
    definition (86)
        on left: 5 6 7 8 9 10
        on right: 3 4
    module (87)
        on left: 12
        on right: 9
    $@1 (88)
        on left: 11
        on right: 12
    interface (89)
        on left: 13 14
        on right: 8
    interface_dcl (90)
        on left: 15
        on right: 13
    forward_dcl (91)
        on left: 16 17
        on right: 14
    interface_header (92)
        on left: 18 19 20 21
        on right: 15
    interface_body (93)
        on left: 22 23
        on right: 15
    exports (94)
        on left: 24 25
        on right: 23 25 48
    export (95)
        on left: 26 27 28 29 30
        on right: 24 25 66
    interface_inheritance_spec (96)
        on left: 31
        on right: 19 21
    interface_names (97)
        on left: 32
        on right: 31 58 59
    scoped_names (98)
        on left: 33 34
        on right: 32 34 64 228
    scoped_name (99)
        on left: 35 36 37
        on right: 33 34 37 65 85 108 128 184 238
    value (100)
        on left: 38 39 40 41
        on right: 10
    value_forward_dcl (101)
        on left: 42 43
        on right: 41
    value_box_dcl (102)
        on left: 44
        on right: 40
    value_abs_dcl (103)
        on left: 45 46
        on right: 39
    value_body (104)
        on left: 47 48
        on right: 45 46
    value_dcl (105)
        on left: 49 50
        on right: 38
    value_elements (106)
        on left: 51 52
        on right: 49 52
    value_header (107)
        on left: 53 54 55 56
        on right: 49 50
    value_inheritance_spec (108)
        on left: 57 58 59
        on right: 46 53 54
    value_inheritance_bases (109)
        on left: 60 61 62 63
        on right: 57 58
    value_names (110)
        on left: 64
        on right: 61 63
    value_name (111)
        on left: 65
        on right: 60 61 62 63
    value_element (112)
        on left: 66 67 68
        on right: 51 52
    state_member (113)
        on left: 69 70
        on right: 67
    init_dcl (114)
        on left: 71
        on right: 68
    init_param_decls (115)
        on left: 72 73
        on right: 71 73
    init_param_decl (116)
        on left: 74
        on right: 72 73
    init_param_attribute (117)
        on left: 75
        on right: 74
    const_dcl (118)
        on left: 76
        on right: 6 27
    const_type (119)
        on left: 77 78 79 80 81 82 83 84 85 86
        on right: 76
    const_exp (120)
        on left: 87
        on right: 76 110 118 190
    or_expr (121)
        on left: 88 89
        on right: 87 89
    xor_expr (122)
        on left: 90 91
        on right: 88 89 91
    and_expr (123)
        on left: 92 93
        on right: 90 91 93
    shift_expr (124)
        on left: 94 95 96
        on right: 92 93 95 96
    add_expr (125)
        on left: 97 98 99
        on right: 94 95 96 98 99
    mult_expr (126)
        on left: 100 101 102 103
        on right: 97 98 99 101 102 103
    unary_expr (127)
        on left: 104 105 106 107
        on right: 100 101 102 103
    primary_expr (128)
        on left: 108 109 110
        on right: 104 105 106 107
    literal (129)
        on left: 111 112 113 114 115 116 117
        on right: 109
    positive_int_const (130)
        on left: 118
        on right: 197 199 201 206 239
    type_dcl (131)
        on left: 119 120 121 122 123
        on right: 5 26
    type_spec (132)
        on left: 124 125
        on right: 44 69 70 119 178 192
    simple_type_spec (133)
        on left: 126 127 128
        on right: 124 197 198
    base_type_spec (134)
        on left: 129 130 131 132 133 134 135 136 137 138
        on right: 126 235
    template_type_spec (135)
        on left: 139 140 141 142
        on right: 127
    constr_type_spec (136)
        on left: 143 144 145
        on right: 125
    declarators (137)
        on left: 146 147
        on right: 69 70 119 147 178
    declarator (138)
        on left: 148 149
        on right: 146 147 192
    simple_declarator (139)
        on left: 150
        on right: 74 123 148 209 210 223
    complex_declarator (140)
        on left: 151
        on right: 149
    floating_pt_type (141)
        on left: 152 153 154
        on right: 81 129
    integer_type (142)
        on left: 155 156
        on right: 77 130 180
    signed_int (143)
        on left: 157 158 159
        on right: 155
    signed_short_int (144)
        on left: 160
        on right: 158
    signed_long_int (145)
        on left: 161
        on right: 157
    signed_longlong_int (146)
        on left: 162
        on right: 159
    unsigned_int (147)
        on left: 163 164 165
        on right: 156
    unsigned_short_int (148)
        on left: 166
        on right: 164
    unsigned_long_int (149)
        on left: 167
        on right: 163
    unsigned_longlong_int (150)
        on left: 168
        on right: 165
    char_type (151)
        on left: 169
        on right: 78 131 181
    wide_char_type (152)
        on left: 170
        on right: 79 132
    boolean_type (153)
        on left: 171
        on right: 80 133 182
    octet_type (154)
        on left: 172
        on right: 86 134
    any_type (155)
        on left: 173
        on right: 135
    object_type (156)
        on left: 174
        on right: 136
    struct_type (157)
        on left: 175
        on right: 120 143
    member_list (158)
        on left: 176 177
        on right: 175 177
    member (159)
        on left: 178
        on right: 176 177 213
    union_type (160)
        on left: 179
        on right: 121 144
    switch_type_spec (161)
        on left: 180 181 182 183 184
        on right: 179
    switch_body (162)
        on left: 185 186
        on right: 179 186
    case (163)
        on left: 187 188 189
        on right: 185 186 187
    case_label (164)
        on left: 190 191
        on right: 187 188 189
    element_spec (165)
        on left: 192
        on right: 188 189
    enum_type (166)
        on left: 193
        on right: 122 145 183
    enumerators (167)
        on left: 194 195
        on right: 193 195
    enumerator (168)
        on left: 196
        on right: 194 195
    sequence_type (169)
        on left: 197 198
        on right: 139
    string_type (170)
        on left: 199 200
        on right: 82 140 236
    wide_string_type (171)
        on left: 201 202
        on right: 83 141 237
    array_declarator (172)
        on left: 203
        on right: 151
    fixed_array_sizes (173)
        on left: 204 205
        on right: 203 205
    fixed_array_size (174)
        on left: 206
        on right: 204 205
    attr_dcl (175)
        on left: 207 208
        on right: 29
    simple_declarators (176)
        on left: 209 210
        on right: 207 208 210
    except_dcl (177)
        on left: 211
        on right: 7 28
    members (178)
        on left: 212 213
        on right: 211 213
    op_dcl (179)
        on left: 214
        on right: 30
    op_attribute (180)
        on left: 215 216
        on right: 214
    op_type_spec (181)
        on left: 217 218
        on right: 214
    parameter_dcls (182)
        on left: 219 220
        on right: 214
    param_dcls (183)
        on left: 221 222
        on right: 219 222
    param_dcl (184)
        on left: 223
        on right: 221 222
    param_attribute (185)
        on left: 224 225 226
        on right: 223
    raises_expr (186)
        on left: 227 228
        on right: 214
    context_expr (187)
        on left: 229 230
        on right: 214
    string_literals (188)
        on left: 231 232
        on right: 230 232
    T_string_literal (189)
        on left: 233 234
        on right: 112 231 232 234
    param_type_spec (190)
        on left: 235 236 237 238
        on right: 74 207 208 217 223
    fixed_pt_type (191)
        on left: 239
        on right: 142
    fixed_pt_const_type (192)
        on left: 240
        on right: 84
    value_base_type (193)
        on left: 241
        on right: 137
    principal_type (194)
        on left: 242
        on right: 138


State 0

    0 $accept: . specification $end

    T_CONST      shift, and go to state 1
    T_ENUM       shift, and go to state 2
    T_EXCEPTION  shift, and go to state 3
    T_INTERFACE  shift, and go to state 4
    T_MODULE     shift, and go to state 5
    T_STRUCT     shift, and go to state 6
    T_TYPEDEF    shift, and go to state 7
    T_UNION      shift, and go to state 8
    T_ABSTRACT   shift, and go to state 9
    T_VALUETYPE  shift, and go to state 10
    T_CUSTOM     shift, and go to state 11
    T_NATIVE     shift, and go to state 12

    $default  reduce using rule 1 (specification)

    specification      go to state 13
    definitions        go to state 14
    definition         go to state 15
    module             go to state 16
    interface          go to state 17
    interface_dcl      go to state 18
    forward_dcl        go to state 19
    interface_header   go to state 20
    value              go to state 21
    value_forward_dcl  go to state 22
    value_box_dcl      go to state 23
    value_abs_dcl      go to state 24
    value_dcl          go to state 25
    value_header       go to state 26
    const_dcl          go to state 27
    type_dcl           go to state 28
    struct_type        go to state 29
    union_type         go to state 30
    enum_type          go to state 31
    except_dcl         go to state 32


State 1

   76 const_dcl: T_CONST . const_type T_IDENTIFIER T_EQUAL const_exp

    T_BOOLEAN     shift, and go to state 33
    T_CHAR        shift, and go to state 34
    T_DOUBLE      shift, and go to state 35
    T_FIXED       shift, and go to state 36
    T_FLOAT       shift, and go to state 37
    T_IDENTIFIER  shift, and go to state 38
    T_LONG        shift, and go to state 39
    T_OCTET       shift, and go to state 40
    T_SCOPE       shift, and go to state 41
    T_SHORT       shift, and go to state 42
    T_STRING      shift, and go to state 43
    T_UNSIGNED    shift, and go to state 44
    T_WCHAR       shift, and go to state 45
    T_WSTRING     shift, and go to state 46

    scoped_name            go to state 47
    const_type             go to state 48
    floating_pt_type       go to state 49
    integer_type           go to state 50
    signed_int             go to state 51
    signed_short_int       go to state 52
    signed_long_int        go to state 53
    signed_longlong_int    go to state 54
    unsigned_int           go to state 55
    unsigned_short_int     go to state 56
    unsigned_long_int      go to state 57
    unsigned_longlong_int  go to state 58
    char_type              go to state 59
    wide_char_type         go to state 60
    boolean_type           go to state 61
    octet_type             go to state 62
    string_type            go to state 63
    wide_string_type       go to state 64
    fixed_pt_const_type    go to state 65


State 2

  193 enum_type: T_ENUM . T_IDENTIFIER T_LEFT_CURLY_BRACKET enumerators T_RIGHT_CURLY_BRACKET

    T_IDENTIFIER  shift, and go to state 66


State 3

  211 except_dcl: T_EXCEPTION . T_IDENTIFIER T_LEFT_CURLY_BRACKET members T_RIGHT_CURLY_BRACKET

    T_IDENTIFIER  shift, and go to state 67


State 4

   16 forward_dcl: T_INTERFACE . T_IDENTIFIER
   18 interface_header: T_INTERFACE . T_IDENTIFIER
   19                 | T_INTERFACE . T_IDENTIFIER interface_inheritance_spec

    T_IDENTIFIER  shift, and go to state 68


State 5

   12 module: T_MODULE . T_IDENTIFIER T_LEFT_CURLY_BRACKET $@1 definitions T_RIGHT_CURLY_BRACKET

    T_IDENTIFIER  shift, and go to state 69


State 6

  175 struct_type: T_STRUCT . T_IDENTIFIER T_LEFT_CURLY_BRACKET member_list T_RIGHT_CURLY_BRACKET

    T_IDENTIFIER  shift, and go to state 70


State 7

  119 type_dcl: T_TYPEDEF . type_spec declarators

    T_ANY         shift, and go to state 71
    T_BOOLEAN     shift, and go to state 33
    T_CHAR        shift, and go to state 34
    T_DOUBLE      shift, and go to state 35
    T_ENUM        shift, and go to state 2
    T_FIXED       shift, and go to state 72
    T_FLOAT       shift, and go to state 37
    T_IDENTIFIER  shift, and go to state 38
    T_LONG        shift, and go to state 39
    T_OCTET       shift, and go to state 40
    T_PRINCIPAL   shift, and go to state 73
    T_SCOPE       shift, and go to state 41
    T_SEQUENCE    shift, and go to state 74
    T_SHORT       shift, and go to state 42
    T_STRING      shift, and go to state 43
    T_STRUCT      shift, and go to state 6
    T_OBJECT      shift, and go to state 75
    T_UNION       shift, and go to state 8
    T_UNSIGNED    shift, and go to state 44
    T_WCHAR       shift, and go to state 45
    T_WSTRING     shift, and go to state 46
    T_VALUEBASE   shift, and go to state 76

    scoped_name            go to state 77
    type_spec              go to state 78
    simple_type_spec       go to state 79
    base_type_spec         go to state 80
    template_type_spec     go to state 81
    constr_type_spec       go to state 82
    floating_pt_type       go to state 83
    integer_type           go to state 84
    signed_int             go to state 51
    signed_short_int       go to state 52
    signed_long_int        go to state 53
    signed_longlong_int    go to state 54
    unsigned_int           go to state 55
    unsigned_short_int     go to state 56
    unsigned_long_int      go to state 57
    unsigned_longlong_int  go to state 58
    char_type              go to state 85
    wide_char_type         go to state 86
    boolean_type           go to state 87
    octet_type             go to state 88
    any_type               go to state 89
    object_type            go to state 90
    struct_type            go to state 91
    union_type             go to state 92
    enum_type              go to state 93
    sequence_type          go to state 94
    string_type            go to state 95
    wide_string_type       go to state 96
    fixed_pt_type          go to state 97
    value_base_type        go to state 98
    principal_type         go to state 99


State 8

  179 union_type: T_UNION . T_IDENTIFIER T_SWITCH T_LEFT_PARANTHESIS switch_type_spec T_RIGHT_PARANTHESIS T_LEFT_CURLY_BRACKET switch_body T_RIGHT_CURLY_BRACKET

    T_IDENTIFIER  shift, and go to state 100


State 9

   17 forward_dcl: T_ABSTRACT . T_INTERFACE T_IDENTIFIER
   20 interface_header: T_ABSTRACT . T_INTERFACE T_IDENTIFIER
   21                 | T_ABSTRACT . T_INTERFACE T_IDENTIFIER interface_inheritance_spec
   43 value_forward_dcl: T_ABSTRACT . T_VALUETYPE T_IDENTIFIER
   45 value_abs_dcl: T_ABSTRACT . T_VALUETYPE T_IDENTIFIER T_LEFT_CURLY_BRACKET value_body T_RIGHT_CURLY_BRACKET
   46              | T_ABSTRACT . T_VALUETYPE T_IDENTIFIER value_inheritance_spec T_LEFT_CURLY_BRACKET value_body T_RIGHT_CURLY_BRACKET

    T_INTERFACE  shift, and go to state 101
    T_VALUETYPE  shift, and go to state 102


State 10

   42 value_forward_dcl: T_VALUETYPE . T_IDENTIFIER
   44 value_box_dcl: T_VALUETYPE . T_IDENTIFIER type_spec
   53 value_header: T_VALUETYPE . T_IDENTIFIER value_inheritance_spec
   55             | T_VALUETYPE . T_IDENTIFIER

    T_IDENTIFIER  shift, and go to state 103


State 11

   54 value_header: T_CUSTOM . T_VALUETYPE T_IDENTIFIER value_inheritance_spec
   56             | T_CUSTOM . T_VALUETYPE T_IDENTIFIER

    T_VALUETYPE  shift, and go to state 104


State 12

  123 type_dcl: T_NATIVE . simple_declarator

    T_IDENTIFIER  shift, and go to state 105

    simple_declarator  go to state 106


State 13

    0 $accept: specification . $end

    $end  shift, and go to state 107


State 14

    2 specification: definitions .

    $default  reduce using rule 2 (specification)


State 15

    3 definitions: definition .
    4            | definition . definitions

    T_CONST      shift, and go to state 1
    T_ENUM       shift, and go to state 2
    T_EXCEPTION  shift, and go to state 3
    T_INTERFACE  shift, and go to state 4
    T_MODULE     shift, and go to state 5
    T_STRUCT     shift, and go to state 6
    T_TYPEDEF    shift, and go to state 7
    T_UNION      shift, and go to state 8
    T_ABSTRACT   shift, and go to state 9
    T_VALUETYPE  shift, and go to state 10
    T_CUSTOM     shift, and go to state 11
    T_NATIVE     shift, and go to state 12

    $default  reduce using rule 3 (definitions)

    definitions        go to state 108
    definition         go to state 15
    module             go to state 16
    interface          go to state 17
    interface_dcl      go to state 18
    forward_dcl        go to state 19
    interface_header   go to state 20
    value              go to state 21
    value_forward_dcl  go to state 22
    value_box_dcl      go to state 23
    value_abs_dcl      go to state 24
    value_dcl          go to state 25
    value_header       go to state 26
    const_dcl          go to state 27
    type_dcl           go to state 28
    struct_type        go to state 29
    union_type         go to state 30
    enum_type          go to state 31
    except_dcl         go to state 32


State 16

    9 definition: module . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 109


State 17

    8 definition: interface . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 110


State 18

   13 interface: interface_dcl .

    $default  reduce using rule 13 (interface)


State 19

   14 interface: forward_dcl .

    $default  reduce using rule 14 (interface)


State 20

   15 interface_dcl: interface_header . T_LEFT_CURLY_BRACKET interface_body T_RIGHT_CURLY_BRACKET

    T_LEFT_CURLY_BRACKET  shift, and go to state 111


State 21

   10 definition: value . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 112


State 22

   41 value: value_forward_dcl .

    $default  reduce using rule 41 (value)


State 23

   40 value: value_box_dcl .

    $default  reduce using rule 40 (value)


State 24

   39 value: value_abs_dcl .

    $default  reduce using rule 39 (value)


State 25

   38 value: value_dcl .

    $default  reduce using rule 38 (value)


State 26

   49 value_dcl: value_header . T_LEFT_CURLY_BRACKET value_elements T_RIGHT_CURLY_BRACKET
   50          | value_header . T_LEFT_CURLY_BRACKET T_RIGHT_CURLY_BRACKET

    T_LEFT_CURLY_BRACKET  shift, and go to state 113


State 27

    6 definition: const_dcl . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 114


State 28

    5 definition: type_dcl . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 115


State 29

  120 type_dcl: struct_type .

    $default  reduce using rule 120 (type_dcl)


State 30

  121 type_dcl: union_type .

    $default  reduce using rule 121 (type_dcl)


State 31

  122 type_dcl: enum_type .

    $default  reduce using rule 122 (type_dcl)


State 32

    7 definition: except_dcl . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 116


State 33

  171 boolean_type: T_BOOLEAN .

    $default  reduce using rule 171 (boolean_type)


State 34

  169 char_type: T_CHAR .

    $default  reduce using rule 169 (char_type)


State 35

  153 floating_pt_type: T_DOUBLE .

    $default  reduce using rule 153 (floating_pt_type)


State 36

  240 fixed_pt_const_type: T_FIXED .

    $default  reduce using rule 240 (fixed_pt_const_type)


State 37

  152 floating_pt_type: T_FLOAT .

    $default  reduce using rule 152 (floating_pt_type)


State 38

   35 scoped_name: T_IDENTIFIER .

    $default  reduce using rule 35 (scoped_name)


State 39

  154 floating_pt_type: T_LONG . T_DOUBLE
  161 signed_long_int: T_LONG .
  162 signed_longlong_int: T_LONG . T_LONG

    T_DOUBLE  shift, and go to state 117
    T_LONG    shift, and go to state 118

    $default  reduce using rule 161 (signed_long_int)


State 40

  172 octet_type: T_OCTET .

    $default  reduce using rule 172 (octet_type)


State 41

   36 scoped_name: T_SCOPE . T_IDENTIFIER

    T_IDENTIFIER  shift, and go to state 119


State 42

  160 signed_short_int: T_SHORT .

    $default  reduce using rule 160 (signed_short_int)


State 43

  199 string_type: T_STRING . T_LESS_THAN_SIGN positive_int_const T_GREATER_THAN_SIGN
  200            | T_STRING .

    T_LESS_THAN_SIGN  shift, and go to state 120

    $default  reduce using rule 200 (string_type)


State 44

  166 unsigned_short_int: T_UNSIGNED . T_SHORT
  167 unsigned_long_int: T_UNSIGNED . T_LONG
  168 unsigned_longlong_int: T_UNSIGNED . T_LONG T_LONG

    T_LONG   shift, and go to state 121
    T_SHORT  shift, and go to state 122


State 45

  170 wide_char_type: T_WCHAR .

    $default  reduce using rule 170 (wide_char_type)


State 46

  201 wide_string_type: T_WSTRING . T_LESS_THAN_SIGN positive_int_const T_GREATER_THAN_SIGN
  202                 | T_WSTRING .

    T_LESS_THAN_SIGN  shift, and go to state 123

    $default  reduce using rule 202 (wide_string_type)


State 47

   37 scoped_name: scoped_name . T_SCOPE T_IDENTIFIER
   85 const_type: scoped_name .

    T_SCOPE  shift, and go to state 124

    $default  reduce using rule 85 (const_type)


State 48

   76 const_dcl: T_CONST const_type . T_IDENTIFIER T_EQUAL const_exp

    T_IDENTIFIER  shift, and go to state 125


State 49

   81 const_type: floating_pt_type .

    $default  reduce using rule 81 (const_type)


State 50

   77 const_type: integer_type .

    $default  reduce using rule 77 (const_type)


State 51

  155 integer_type: signed_int .

    $default  reduce using rule 155 (integer_type)


State 52

  158 signed_int: signed_short_int .

    $default  reduce using rule 158 (signed_int)


State 53

  157 signed_int: signed_long_int .

    $default  reduce using rule 157 (signed_int)


State 54

  159 signed_int: signed_longlong_int .

    $default  reduce using rule 159 (signed_int)


State 55

  156 integer_type: unsigned_int .

    $default  reduce using rule 156 (integer_type)


State 56

  164 unsigned_int: unsigned_short_int .

    $default  reduce using rule 164 (unsigned_int)


State 57

  163 unsigned_int: unsigned_long_int .

    $default  reduce using rule 163 (unsigned_int)


State 58

  165 unsigned_int: unsigned_longlong_int .

    $default  reduce using rule 165 (unsigned_int)


State 59

   78 const_type: char_type .

    $default  reduce using rule 78 (const_type)


State 60

   79 const_type: wide_char_type .

    $default  reduce using rule 79 (const_type)


State 61

   80 const_type: boolean_type .

    $default  reduce using rule 80 (const_type)


State 62

   86 const_type: octet_type .

    $default  reduce using rule 86 (const_type)


State 63

   82 const_type: string_type .

    $default  reduce using rule 82 (const_type)


State 64

   83 const_type: wide_string_type .

    $default  reduce using rule 83 (const_type)


State 65

   84 const_type: fixed_pt_const_type .

    $default  reduce using rule 84 (const_type)


State 66

  193 enum_type: T_ENUM T_IDENTIFIER . T_LEFT_CURLY_BRACKET enumerators T_RIGHT_CURLY_BRACKET

    T_LEFT_CURLY_BRACKET  shift, and go to state 126


State 67

  211 except_dcl: T_EXCEPTION T_IDENTIFIER . T_LEFT_CURLY_BRACKET members T_RIGHT_CURLY_BRACKET

    T_LEFT_CURLY_BRACKET  shift, and go to state 127


State 68

   16 forward_dcl: T_INTERFACE T_IDENTIFIER .
   18 interface_header: T_INTERFACE T_IDENTIFIER .
   19                 | T_INTERFACE T_IDENTIFIER . interface_inheritance_spec

    T_COLON  shift, and go to state 128

    T_LEFT_CURLY_BRACKET  reduce using rule 18 (interface_header)
    $default              reduce using rule 16 (forward_dcl)

    interface_inheritance_spec  go to state 129


State 69

   12 module: T_MODULE T_IDENTIFIER . T_LEFT_CURLY_BRACKET $@1 definitions T_RIGHT_CURLY_BRACKET

    T_LEFT_CURLY_BRACKET  shift, and go to state 130


State 70

  175 struct_type: T_STRUCT T_IDENTIFIER . T_LEFT_CURLY_BRACKET member_list T_RIGHT_CURLY_BRACKET

    T_LEFT_CURLY_BRACKET  shift, and go to state 131


State 71

  173 any_type: T_ANY .

    $default  reduce using rule 173 (any_type)


State 72

  239 fixed_pt_type: T_FIXED . T_LESS_THAN_SIGN positive_int_const T_COMMA T_INTEGER_LITERAL T_GREATER_THAN_SIGN

    T_LESS_THAN_SIGN  shift, and go to state 132


State 73

  242 principal_type: T_PRINCIPAL .

    $default  reduce using rule 242 (principal_type)


State 74

  197 sequence_type: T_SEQUENCE . T_LESS_THAN_SIGN simple_type_spec T_COMMA positive_int_const T_GREATER_THAN_SIGN
  198              | T_SEQUENCE . T_LESS_THAN_SIGN simple_type_spec T_GREATER_THAN_SIGN

    T_LESS_THAN_SIGN  shift, and go to state 133


State 75

  174 object_type: T_OBJECT .

    $default  reduce using rule 174 (object_type)


State 76

  241 value_base_type: T_VALUEBASE .

    $default  reduce using rule 241 (value_base_type)


State 77

   37 scoped_name: scoped_name . T_SCOPE T_IDENTIFIER
  128 simple_type_spec: scoped_name .

    T_SCOPE  shift, and go to state 124

    $default  reduce using rule 128 (simple_type_spec)


State 78

  119 type_dcl: T_TYPEDEF type_spec . declarators

    T_IDENTIFIER  shift, and go to state 134

    declarators         go to state 135
    declarator          go to state 136
    simple_declarator   go to state 137
    complex_declarator  go to state 138
    array_declarator    go to state 139


State 79

  124 type_spec: simple_type_spec .

    $default  reduce using rule 124 (type_spec)


State 80

  126 simple_type_spec: base_type_spec .

    $default  reduce using rule 126 (simple_type_spec)


State 81

  127 simple_type_spec: template_type_spec .

    $default  reduce using rule 127 (simple_type_spec)


State 82

  125 type_spec: constr_type_spec .

    $default  reduce using rule 125 (type_spec)


State 83

  129 base_type_spec: floating_pt_type .

    $default  reduce using rule 129 (base_type_spec)


State 84

  130 base_type_spec: integer_type .

    $default  reduce using rule 130 (base_type_spec)


State 85

  131 base_type_spec: char_type .

    $default  reduce using rule 131 (base_type_spec)


State 86

  132 base_type_spec: wide_char_type .

    $default  reduce using rule 132 (base_type_spec)


State 87

  133 base_type_spec: boolean_type .

    $default  reduce using rule 133 (base_type_spec)


State 88

  134 base_type_spec: octet_type .

    $default  reduce using rule 134 (base_type_spec)


State 89

  135 base_type_spec: any_type .

    $default  reduce using rule 135 (base_type_spec)


State 90

  136 base_type_spec: object_type .

    $default  reduce using rule 136 (base_type_spec)


State 91

  143 constr_type_spec: struct_type .

    $default  reduce using rule 143 (constr_type_spec)


State 92

  144 constr_type_spec: union_type .

    $default  reduce using rule 144 (constr_type_spec)


State 93

  145 constr_type_spec: enum_type .

    $default  reduce using rule 145 (constr_type_spec)


State 94

  139 template_type_spec: sequence_type .

    $default  reduce using rule 139 (template_type_spec)


State 95

  140 template_type_spec: string_type .

    $default  reduce using rule 140 (template_type_spec)


State 96

  141 template_type_spec: wide_string_type .

    $default  reduce using rule 141 (template_type_spec)


State 97

  142 template_type_spec: fixed_pt_type .

    $default  reduce using rule 142 (template_type_spec)


State 98

  137 base_type_spec: value_base_type .

    $default  reduce using rule 137 (base_type_spec)


State 99

  138 base_type_spec: principal_type .

    $default  reduce using rule 138 (base_type_spec)


State 100

  179 union_type: T_UNION T_IDENTIFIER . T_SWITCH T_LEFT_PARANTHESIS switch_type_spec T_RIGHT_PARANTHESIS T_LEFT_CURLY_BRACKET switch_body T_RIGHT_CURLY_BRACKET

    T_SWITCH  shift, and go to state 140


State 101

   17 forward_dcl: T_ABSTRACT T_INTERFACE . T_IDENTIFIER
   20 interface_header: T_ABSTRACT T_INTERFACE . T_IDENTIFIER
   21                 | T_ABSTRACT T_INTERFACE . T_IDENTIFIER interface_inheritance_spec

    T_IDENTIFIER  shift, and go to state 141


State 102

   43 value_forward_dcl: T_ABSTRACT T_VALUETYPE . T_IDENTIFIER
   45 value_abs_dcl: T_ABSTRACT T_VALUETYPE . T_IDENTIFIER T_LEFT_CURLY_BRACKET value_body T_RIGHT_CURLY_BRACKET
   46              | T_ABSTRACT T_VALUETYPE . T_IDENTIFIER value_inheritance_spec T_LEFT_CURLY_BRACKET value_body T_RIGHT_CURLY_BRACKET

    T_IDENTIFIER  shift, and go to state 142


State 103

   42 value_forward_dcl: T_VALUETYPE T_IDENTIFIER .
   44 value_box_dcl: T_VALUETYPE T_IDENTIFIER . type_spec
   53 value_header: T_VALUETYPE T_IDENTIFIER . value_inheritance_spec
   55             | T_VALUETYPE T_IDENTIFIER .

    T_ANY         shift, and go to state 71
    T_BOOLEAN     shift, and go to state 33
    T_CHAR        shift, and go to state 34
    T_COLON       shift, and go to state 143
    T_DOUBLE      shift, and go to state 35
    T_ENUM        shift, and go to state 2
    T_FIXED       shift, and go to state 72
    T_FLOAT       shift, and go to state 37
    T_IDENTIFIER  shift, and go to state 38
    T_LONG        shift, and go to state 39
    T_OCTET       shift, and go to state 40
    T_PRINCIPAL   shift, and go to state 73
    T_SCOPE       shift, and go to state 41
    T_SEQUENCE    shift, and go to state 74
    T_SHORT       shift, and go to state 42
    T_STRING      shift, and go to state 43
    T_STRUCT      shift, and go to state 6
    T_OBJECT      shift, and go to state 75
    T_UNION       shift, and go to state 8
    T_UNSIGNED    shift, and go to state 44
    T_WCHAR       shift, and go to state 45
    T_WSTRING     shift, and go to state 46
    T_SUPPORTS    shift, and go to state 144
    T_VALUEBASE   shift, and go to state 76

    T_LEFT_CURLY_BRACKET  reduce using rule 55 (value_header)
    $default              reduce using rule 42 (value_forward_dcl)

    scoped_name             go to state 77
    value_inheritance_spec  go to state 145
    type_spec               go to state 146
    simple_type_spec        go to state 79
    base_type_spec          go to state 80
    template_type_spec      go to state 81
    constr_type_spec        go to state 82
    floating_pt_type        go to state 83
    integer_type            go to state 84
    signed_int              go to state 51
    signed_short_int        go to state 52
    signed_long_int         go to state 53
    signed_longlong_int     go to state 54
    unsigned_int            go to state 55
    unsigned_short_int      go to state 56
    unsigned_long_int       go to state 57
    unsigned_longlong_int   go to state 58
    char_type               go to state 85
    wide_char_type          go to state 86
    boolean_type            go to state 87
    octet_type              go to state 88
    any_type                go to state 89
    object_type             go to state 90
    struct_type             go to state 91
    union_type              go to state 92
    enum_type               go to state 93
    sequence_type           go to state 94
    string_type             go to state 95
    wide_string_type        go to state 96
    fixed_pt_type           go to state 97
    value_base_type         go to state 98
    principal_type          go to state 99


State 104

   54 value_header: T_CUSTOM T_VALUETYPE . T_IDENTIFIER value_inheritance_spec
   56             | T_CUSTOM T_VALUETYPE . T_IDENTIFIER

    T_IDENTIFIER  shift, and go to state 147


State 105

  150 simple_declarator: T_IDENTIFIER .

    $default  reduce using rule 150 (simple_declarator)


State 106

  123 type_dcl: T_NATIVE simple_declarator .

    $default  reduce using rule 123 (type_dcl)


State 107

    0 $accept: specification $end .

    $default  accept


State 108

    4 definitions: definition definitions .

    $default  reduce using rule 4 (definitions)


State 109

    9 definition: module T_SEMICOLON .

    $default  reduce using rule 9 (definition)


State 110

    8 definition: interface T_SEMICOLON .

    $default  reduce using rule 8 (definition)


State 111

   15 interface_dcl: interface_header T_LEFT_CURLY_BRACKET . interface_body T_RIGHT_CURLY_BRACKET

    T_ATTRIBUTE  shift, and go to state 148
    T_CONST      shift, and go to state 1
    T_ENUM       shift, and go to state 2
    T_EXCEPTION  shift, and go to state 3
    T_ONEWAY     shift, and go to state 149
    T_READONLY   shift, and go to state 150
    T_STRUCT     shift, and go to state 6
    T_TYPEDEF    shift, and go to state 7
    T_UNION      shift, and go to state 8
    T_NATIVE     shift, and go to state 12

    T_RIGHT_CURLY_BRACKET  reduce using rule 22 (interface_body)
    $default               reduce using rule 215 (op_attribute)

    interface_body  go to state 151
    exports         go to state 152
    export          go to state 153
    const_dcl       go to state 154
    type_dcl        go to state 155
    struct_type     go to state 29
    union_type      go to state 30
    enum_type       go to state 31
    attr_dcl        go to state 156
    except_dcl      go to state 157
    op_dcl          go to state 158
    op_attribute    go to state 159


State 112

   10 definition: value T_SEMICOLON .

    $default  reduce using rule 10 (definition)


State 113

   49 value_dcl: value_header T_LEFT_CURLY_BRACKET . value_elements T_RIGHT_CURLY_BRACKET
   50          | value_header T_LEFT_CURLY_BRACKET . T_RIGHT_CURLY_BRACKET

    T_ATTRIBUTE            shift, and go to state 148
    T_CONST                shift, and go to state 1
    T_ENUM                 shift, and go to state 2
    T_EXCEPTION            shift, and go to state 3
    T_ONEWAY               shift, and go to state 149
    T_READONLY             shift, and go to state 150
    T_RIGHT_CURLY_BRACKET  shift, and go to state 160
    T_STRUCT               shift, and go to state 6
    T_TYPEDEF              shift, and go to state 7
    T_UNION                shift, and go to state 8
    T_PUBLIC               shift, and go to state 161
    T_PRIVATE              shift, and go to state 162
    T_FACTORY              shift, and go to state 163
    T_NATIVE               shift, and go to state 12

    $default  reduce using rule 215 (op_attribute)

    export          go to state 164
    value_elements  go to state 165
    value_element   go to state 166
    state_member    go to state 167
    init_dcl        go to state 168
    const_dcl       go to state 154
    type_dcl        go to state 155
    struct_type     go to state 29
    union_type      go to state 30
    enum_type       go to state 31
    attr_dcl        go to state 156
    except_dcl      go to state 157
    op_dcl          go to state 158
    op_attribute    go to state 159


State 114

    6 definition: const_dcl T_SEMICOLON .

    $default  reduce using rule 6 (definition)


State 115

    5 definition: type_dcl T_SEMICOLON .

    $default  reduce using rule 5 (definition)


State 116

    7 definition: except_dcl T_SEMICOLON .

    $default  reduce using rule 7 (definition)


State 117

  154 floating_pt_type: T_LONG T_DOUBLE .

    $default  reduce using rule 154 (floating_pt_type)


State 118

  162 signed_longlong_int: T_LONG T_LONG .

    $default  reduce using rule 162 (signed_longlong_int)


State 119

   36 scoped_name: T_SCOPE T_IDENTIFIER .

    $default  reduce using rule 36 (scoped_name)


State 120

  199 string_type: T_STRING T_LESS_THAN_SIGN . positive_int_const T_GREATER_THAN_SIGN

    T_CHARACTER_LITERAL    shift, and go to state 169
    T_FALSE                shift, and go to state 170
    T_FIXED_PT_LITERAL     shift, and go to state 171
    T_FLOATING_PT_LITERAL  shift, and go to state 172
    T_IDENTIFIER           shift, and go to state 38
    T_INTEGER_LITERAL      shift, and go to state 173
    T_LEFT_PARANTHESIS     shift, and go to state 174
    T_MINUS_SIGN           shift, and go to state 175
    T_PLUS_SIGN            shift, and go to state 176
    T_SCOPE                shift, and go to state 41
    T_STRING_LITERAL       shift, and go to state 177
    T_TILDE                shift, and go to state 178
    T_TRUE                 shift, and go to state 179

    scoped_name         go to state 180
    const_exp           go to state 181
    or_expr             go to state 182
    xor_expr            go to state 183
    and_expr            go to state 184
    shift_expr          go to state 185
    add_expr            go to state 186
    mult_expr           go to state 187
    unary_expr          go to state 188
    primary_expr        go to state 189
    literal             go to state 190
    positive_int_const  go to state 191
    T_string_literal    go to state 192


State 121

  167 unsigned_long_int: T_UNSIGNED T_LONG .
  168 unsigned_longlong_int: T_UNSIGNED T_LONG . T_LONG

    T_LONG  shift, and go to state 193

    $default  reduce using rule 167 (unsigned_long_int)


State 122

  166 unsigned_short_int: T_UNSIGNED T_SHORT .

    $default  reduce using rule 166 (unsigned_short_int)


State 123

  201 wide_string_type: T_WSTRING T_LESS_THAN_SIGN . positive_int_const T_GREATER_THAN_SIGN

    T_CHARACTER_LITERAL    shift, and go to state 169
    T_FALSE                shift, and go to state 170
    T_FIXED_PT_LITERAL     shift, and go to state 171
    T_FLOATING_PT_LITERAL  shift, and go to state 172
    T_IDENTIFIER           shift, and go to state 38
    T_INTEGER_LITERAL      shift, and go to state 173
    T_LEFT_PARANTHESIS     shift, and go to state 174
    T_MINUS_SIGN           shift, and go to state 175
    T_PLUS_SIGN            shift, and go to state 176
    T_SCOPE                shift, and go to state 41
    T_STRING_LITERAL       shift, and go to state 177
    T_TILDE                shift, and go to state 178
    T_TRUE                 shift, and go to state 179

    scoped_name         go to state 180
    const_exp           go to state 181
    or_expr             go to state 182
    xor_expr            go to state 183
    and_expr            go to state 184
    shift_expr          go to state 185
    add_expr            go to state 186
    mult_expr           go to state 187
    unary_expr          go to state 188
    primary_expr        go to state 189
    literal             go to state 190
    positive_int_const  go to state 194
    T_string_literal    go to state 192


State 124

   37 scoped_name: scoped_name T_SCOPE . T_IDENTIFIER

    T_IDENTIFIER  shift, and go to state 195


State 125

   76 const_dcl: T_CONST const_type T_IDENTIFIER . T_EQUAL const_exp

    T_EQUAL  shift, and go to state 196


State 126

  193 enum_type: T_ENUM T_IDENTIFIER T_LEFT_CURLY_BRACKET . enumerators T_RIGHT_CURLY_BRACKET

    T_IDENTIFIER  shift, and go to state 197

    enumerators  go to state 198
    enumerator   go to state 199


State 127

  211 except_dcl: T_EXCEPTION T_IDENTIFIER T_LEFT_CURLY_BRACKET . members T_RIGHT_CURLY_BRACKET

    T_ANY         shift, and go to state 71
    T_BOOLEAN     shift, and go to state 33
    T_CHAR        shift, and go to state 34
    T_DOUBLE      shift, and go to state 35
    T_ENUM        shift, and go to state 2
    T_FIXED       shift, and go to state 72
    T_FLOAT       shift, and go to state 37
    T_IDENTIFIER  shift, and go to state 38
    T_LONG        shift, and go to state 39
    T_OCTET       shift, and go to state 40
    T_PRINCIPAL   shift, and go to state 73
    T_SCOPE       shift, and go to state 41
    T_SEQUENCE    shift, and go to state 74
    T_SHORT       shift, and go to state 42
    T_STRING      shift, and go to state 43
    T_STRUCT      shift, and go to state 6
    T_OBJECT      shift, and go to state 75
    T_UNION       shift, and go to state 8
    T_UNSIGNED    shift, and go to state 44
    T_WCHAR       shift, and go to state 45
    T_WSTRING     shift, and go to state 46
    T_VALUEBASE   shift, and go to state 76

    $default  reduce using rule 212 (members)

    scoped_name            go to state 77
    type_spec              go to state 200
    simple_type_spec       go to state 79
    base_type_spec         go to state 80
    template_type_spec     go to state 81
    constr_type_spec       go to state 82
    floating_pt_type       go to state 83
    integer_type           go to state 84
    signed_int             go to state 51
    signed_short_int       go to state 52
    signed_long_int        go to state 53
    signed_longlong_int    go to state 54
    unsigned_int           go to state 55
    unsigned_short_int     go to state 56
    unsigned_long_int      go to state 57
    unsigned_longlong_int  go to state 58
    char_type              go to state 85
    wide_char_type         go to state 86
    boolean_type           go to state 87
    octet_type             go to state 88
    any_type               go to state 89
    object_type            go to state 90
    struct_type            go to state 91
    member                 go to state 201
    union_type             go to state 92
    enum_type              go to state 93
    sequence_type          go to state 94
    string_type            go to state 95
    wide_string_type       go to state 96
    members                go to state 202
    fixed_pt_type          go to state 97
    value_base_type        go to state 98
    principal_type         go to state 99


State 128

   31 interface_inheritance_spec: T_COLON . interface_names

    T_IDENTIFIER  shift, and go to state 38
    T_SCOPE       shift, and go to state 41

    interface_names  go to state 203
    scoped_names     go to state 204
    scoped_name      go to state 205


State 129

   19 interface_header: T_INTERFACE T_IDENTIFIER interface_inheritance_spec .

    $default  reduce using rule 19 (interface_header)


State 130

   12 module: T_MODULE T_IDENTIFIER T_LEFT_CURLY_BRACKET . $@1 definitions T_RIGHT_CURLY_BRACKET

    $default  reduce using rule 11 ($@1)

    $@1  go to state 206


State 131

  175 struct_type: T_STRUCT T_IDENTIFIER T_LEFT_CURLY_BRACKET . member_list T_RIGHT_CURLY_BRACKET

    T_ANY         shift, and go to state 71
    T_BOOLEAN     shift, and go to state 33
    T_CHAR        shift, and go to state 34
    T_DOUBLE      shift, and go to state 35
    T_ENUM        shift, and go to state 2
    T_FIXED       shift, and go to state 72
    T_FLOAT       shift, and go to state 37
    T_IDENTIFIER  shift, and go to state 38
    T_LONG        shift, and go to state 39
    T_OCTET       shift, and go to state 40
    T_PRINCIPAL   shift, and go to state 73
    T_SCOPE       shift, and go to state 41
    T_SEQUENCE    shift, and go to state 74
    T_SHORT       shift, and go to state 42
    T_STRING      shift, and go to state 43
    T_STRUCT      shift, and go to state 6
    T_OBJECT      shift, and go to state 75
    T_UNION       shift, and go to state 8
    T_UNSIGNED    shift, and go to state 44
    T_WCHAR       shift, and go to state 45
    T_WSTRING     shift, and go to state 46
    T_VALUEBASE   shift, and go to state 76

    scoped_name            go to state 77
    type_spec              go to state 200
    simple_type_spec       go to state 79
    base_type_spec         go to state 80
    template_type_spec     go to state 81
    constr_type_spec       go to state 82
    floating_pt_type       go to state 83
    integer_type           go to state 84
    signed_int             go to state 51
    signed_short_int       go to state 52
    signed_long_int        go to state 53
    signed_longlong_int    go to state 54
    unsigned_int           go to state 55
    unsigned_short_int     go to state 56
    unsigned_long_int      go to state 57
    unsigned_longlong_int  go to state 58
    char_type              go to state 85
    wide_char_type         go to state 86
    boolean_type           go to state 87
    octet_type             go to state 88
    any_type               go to state 89
    object_type            go to state 90
    struct_type            go to state 91
    member_list            go to state 207
    member                 go to state 208
    union_type             go to state 92
    enum_type              go to state 93
    sequence_type          go to state 94
    string_type            go to state 95
    wide_string_type       go to state 96
    fixed_pt_type          go to state 97
    value_base_type        go to state 98
    principal_type         go to state 99


State 132

  239 fixed_pt_type: T_FIXED T_LESS_THAN_SIGN . positive_int_const T_COMMA T_INTEGER_LITERAL T_GREATER_THAN_SIGN

    T_CHARACTER_LITERAL    shift, and go to state 169
    T_FALSE                shift, and go to state 170
    T_FIXED_PT_LITERAL     shift, and go to state 171
    T_FLOATING_PT_LITERAL  shift, and go to state 172
    T_IDENTIFIER           shift, and go to state 38
    T_INTEGER_LITERAL      shift, and go to state 173
    T_LEFT_PARANTHESIS     shift, and go to state 174
    T_MINUS_SIGN           shift, and go to state 175
    T_PLUS_SIGN            shift, and go to state 176
    T_SCOPE                shift, and go to state 41
    T_STRING_LITERAL       shift, and go to state 177
    T_TILDE                shift, and go to state 178
    T_TRUE                 shift, and go to state 179

    scoped_name         go to state 180
    const_exp           go to state 181
    or_expr             go to state 182
    xor_expr            go to state 183
    and_expr            go to state 184
    shift_expr          go to state 185
    add_expr            go to state 186
    mult_expr           go to state 187
    unary_expr          go to state 188
    primary_expr        go to state 189
    literal             go to state 190
    positive_int_const  go to state 209
    T_string_literal    go to state 192


State 133

  197 sequence_type: T_SEQUENCE T_LESS_THAN_SIGN . simple_type_spec T_COMMA positive_int_const T_GREATER_THAN_SIGN
  198              | T_SEQUENCE T_LESS_THAN_SIGN . simple_type_spec T_GREATER_THAN_SIGN

    T_ANY         shift, and go to state 71
    T_BOOLEAN     shift, and go to state 33
    T_CHAR        shift, and go to state 34
    T_DOUBLE      shift, and go to state 35
    T_FIXED       shift, and go to state 72
    T_FLOAT       shift, and go to state 37
    T_IDENTIFIER  shift, and go to state 38
    T_LONG        shift, and go to state 39
    T_OCTET       shift, and go to state 40
    T_PRINCIPAL   shift, and go to state 73
    T_SCOPE       shift, and go to state 41
    T_SEQUENCE    shift, and go to state 74
    T_SHORT       shift, and go to state 42
    T_STRING      shift, and go to state 43
    T_OBJECT      shift, and go to state 75
    T_UNSIGNED    shift, and go to state 44
    T_WCHAR       shift, and go to state 45
    T_WSTRING     shift, and go to state 46
    T_VALUEBASE   shift, and go to state 76

    scoped_name            go to state 77
    simple_type_spec       go to state 210
    base_type_spec         go to state 80
    template_type_spec     go to state 81
    floating_pt_type       go to state 83
    integer_type           go to state 84
    signed_int             go to state 51
    signed_short_int       go to state 52
    signed_long_int        go to state 53
    signed_longlong_int    go to state 54
    unsigned_int           go to state 55
    unsigned_short_int     go to state 56
    unsigned_long_int      go to state 57
    unsigned_longlong_int  go to state 58
    char_type              go to state 85
    wide_char_type         go to state 86
    boolean_type           go to state 87
    octet_type             go to state 88
    any_type               go to state 89
    object_type            go to state 90
    sequence_type          go to state 94
    string_type            go to state 95
    wide_string_type       go to state 96
    fixed_pt_type          go to state 97
    value_base_type        go to state 98
    principal_type         go to state 99


State 134

  150 simple_declarator: T_IDENTIFIER .
  203 array_declarator: T_IDENTIFIER . fixed_array_sizes

    T_LEFT_SQUARE_BRACKET  shift, and go to state 211

    $default  reduce using rule 150 (simple_declarator)

    fixed_array_sizes  go to state 212
    fixed_array_size   go to state 213


State 135

  119 type_dcl: T_TYPEDEF type_spec declarators .

    $default  reduce using rule 119 (type_dcl)


State 136

  146 declarators: declarator .
  147            | declarator . T_COMMA declarators

    T_COMMA  shift, and go to state 214

    $default  reduce using rule 146 (declarators)


State 137

  148 declarator: simple_declarator .

    $default  reduce using rule 148 (declarator)


State 138

  149 declarator: complex_declarator .

    $default  reduce using rule 149 (declarator)


State 139

  151 complex_declarator: array_declarator .

    $default  reduce using rule 151 (complex_declarator)


State 140

  179 union_type: T_UNION T_IDENTIFIER T_SWITCH . T_LEFT_PARANTHESIS switch_type_spec T_RIGHT_PARANTHESIS T_LEFT_CURLY_BRACKET switch_body T_RIGHT_CURLY_BRACKET

    T_LEFT_PARANTHESIS  shift, and go to state 215


State 141

   17 forward_dcl: T_ABSTRACT T_INTERFACE T_IDENTIFIER .
   20 interface_header: T_ABSTRACT T_INTERFACE T_IDENTIFIER .
   21                 | T_ABSTRACT T_INTERFACE T_IDENTIFIER . interface_inheritance_spec

    T_COLON  shift, and go to state 128

    T_LEFT_CURLY_BRACKET  reduce using rule 20 (interface_header)
    $default              reduce using rule 17 (forward_dcl)

    interface_inheritance_spec  go to state 216


State 142

   43 value_forward_dcl: T_ABSTRACT T_VALUETYPE T_IDENTIFIER .
   45 value_abs_dcl: T_ABSTRACT T_VALUETYPE T_IDENTIFIER . T_LEFT_CURLY_BRACKET value_body T_RIGHT_CURLY_BRACKET
   46              | T_ABSTRACT T_VALUETYPE T_IDENTIFIER . value_inheritance_spec T_LEFT_CURLY_BRACKET value_body T_RIGHT_CURLY_BRACKET

    T_COLON               shift, and go to state 143
    T_LEFT_CURLY_BRACKET  shift, and go to state 217
    T_SUPPORTS            shift, and go to state 144

    $default  reduce using rule 43 (value_forward_dcl)

    value_inheritance_spec  go to state 218


State 143

   57 value_inheritance_spec: T_COLON . value_inheritance_bases
   58                       | T_COLON . value_inheritance_bases T_SUPPORTS interface_names

    T_IDENTIFIER   shift, and go to state 38
    T_SCOPE        shift, and go to state 41
    T_TRUNCATABLE  shift, and go to state 219

    scoped_name              go to state 220
    value_inheritance_bases  go to state 221
    value_name               go to state 222


State 144

   59 value_inheritance_spec: T_SUPPORTS . interface_names

    T_IDENTIFIER  shift, and go to state 38
    T_SCOPE       shift, and go to state 41

    interface_names  go to state 223
    scoped_names     go to state 204
    scoped_name      go to state 205


State 145

   53 value_header: T_VALUETYPE T_IDENTIFIER value_inheritance_spec .

    $default  reduce using rule 53 (value_header)


State 146

   44 value_box_dcl: T_VALUETYPE T_IDENTIFIER type_spec .

    $default  reduce using rule 44 (value_box_dcl)


State 147

   54 value_header: T_CUSTOM T_VALUETYPE T_IDENTIFIER . value_inheritance_spec
   56             | T_CUSTOM T_VALUETYPE T_IDENTIFIER .

    T_COLON     shift, and go to state 143
    T_SUPPORTS  shift, and go to state 144

    $default  reduce using rule 56 (value_header)

    value_inheritance_spec  go to state 224


State 148

  207 attr_dcl: T_ATTRIBUTE . param_type_spec simple_declarators

    T_ANY         shift, and go to state 71
    T_BOOLEAN     shift, and go to state 33
    T_CHAR        shift, and go to state 34
    T_DOUBLE      shift, and go to state 35
    T_FLOAT       shift, and go to state 37
    T_IDENTIFIER  shift, and go to state 38
    T_LONG        shift, and go to state 39
    T_OCTET       shift, and go to state 40
    T_PRINCIPAL   shift, and go to state 73
    T_SCOPE       shift, and go to state 41
    T_SHORT       shift, and go to state 42
    T_STRING      shift, and go to state 43
    T_OBJECT      shift, and go to state 75
    T_UNSIGNED    shift, and go to state 44
    T_WCHAR       shift, and go to state 45
    T_WSTRING     shift, and go to state 46
    T_VALUEBASE   shift, and go to state 76

    scoped_name            go to state 225
    base_type_spec         go to state 226
    floating_pt_type       go to state 83
    integer_type           go to state 84
    signed_int             go to state 51
    signed_short_int       go to state 52
    signed_long_int        go to state 53
    signed_longlong_int    go to state 54
    unsigned_int           go to state 55
    unsigned_short_int     go to state 56
    unsigned_long_int      go to state 57
    unsigned_longlong_int  go to state 58
    char_type              go to state 85
    wide_char_type         go to state 86
    boolean_type           go to state 87
    octet_type             go to state 88
    any_type               go to state 89
    object_type            go to state 90
    string_type            go to state 227
    wide_string_type       go to state 228
    param_type_spec        go to state 229
    value_base_type        go to state 98
    principal_type         go to state 99


State 149

  216 op_attribute: T_ONEWAY .

    $default  reduce using rule 216 (op_attribute)


State 150

  208 attr_dcl: T_READONLY . T_ATTRIBUTE param_type_spec simple_declarators

    T_ATTRIBUTE  shift, and go to state 230


State 151

   15 interface_dcl: interface_header T_LEFT_CURLY_BRACKET interface_body . T_RIGHT_CURLY_BRACKET

    T_RIGHT_CURLY_BRACKET  shift, and go to state 231


State 152

   23 interface_body: exports .

    $default  reduce using rule 23 (interface_body)


State 153

   24 exports: export .
   25        | export . exports

    T_ATTRIBUTE  shift, and go to state 148
    T_CONST      shift, and go to state 1
    T_ENUM       shift, and go to state 2
    T_EXCEPTION  shift, and go to state 3
    T_ONEWAY     shift, and go to state 149
    T_READONLY   shift, and go to state 150
    T_STRUCT     shift, and go to state 6
    T_TYPEDEF    shift, and go to state 7
    T_UNION      shift, and go to state 8
    T_NATIVE     shift, and go to state 12

    T_RIGHT_CURLY_BRACKET  reduce using rule 24 (exports)
    $default               reduce using rule 215 (op_attribute)

    exports       go to state 232
    export        go to state 153
    const_dcl     go to state 154
    type_dcl      go to state 155
    struct_type   go to state 29
    union_type    go to state 30
    enum_type     go to state 31
    attr_dcl      go to state 156
    except_dcl    go to state 157
    op_dcl        go to state 158
    op_attribute  go to state 159


State 154

   27 export: const_dcl . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 233


State 155

   26 export: type_dcl . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 234


State 156

   29 export: attr_dcl . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 235


State 157

   28 export: except_dcl . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 236


State 158

   30 export: op_dcl . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 237


State 159

  214 op_dcl: op_attribute . op_type_spec T_IDENTIFIER parameter_dcls raises_expr context_expr

    T_ANY         shift, and go to state 71
    T_BOOLEAN     shift, and go to state 33
    T_CHAR        shift, and go to state 34
    T_DOUBLE      shift, and go to state 35
    T_FLOAT       shift, and go to state 37
    T_IDENTIFIER  shift, and go to state 38
    T_LONG        shift, and go to state 39
    T_OCTET       shift, and go to state 40
    T_PRINCIPAL   shift, and go to state 73
    T_SCOPE       shift, and go to state 41
    T_SHORT       shift, and go to state 42
    T_STRING      shift, and go to state 43
    T_OBJECT      shift, and go to state 75
    T_UNSIGNED    shift, and go to state 44
    T_VOID        shift, and go to state 238
    T_WCHAR       shift, and go to state 45
    T_WSTRING     shift, and go to state 46
    T_VALUEBASE   shift, and go to state 76

    scoped_name            go to state 225
    base_type_spec         go to state 226
    floating_pt_type       go to state 83
    integer_type           go to state 84
    signed_int             go to state 51
    signed_short_int       go to state 52
    signed_long_int        go to state 53
    signed_longlong_int    go to state 54
    unsigned_int           go to state 55
    unsigned_short_int     go to state 56
    unsigned_long_int      go to state 57
    unsigned_longlong_int  go to state 58
    char_type              go to state 85
    wide_char_type         go to state 86
    boolean_type           go to state 87
    octet_type             go to state 88
    any_type               go to state 89
    object_type            go to state 90
    string_type            go to state 227
    wide_string_type       go to state 228
    op_type_spec           go to state 239
    param_type_spec        go to state 240
    value_base_type        go to state 98
    principal_type         go to state 99


State 160

   50 value_dcl: value_header T_LEFT_CURLY_BRACKET T_RIGHT_CURLY_BRACKET .

    $default  reduce using rule 50 (value_dcl)


State 161

   69 state_member: T_PUBLIC . type_spec declarators T_SEMICOLON

    T_ANY         shift, and go to state 71
    T_BOOLEAN     shift, and go to state 33
    T_CHAR        shift, and go to state 34
    T_DOUBLE      shift, and go to state 35
    T_ENUM        shift, and go to state 2
    T_FIXED       shift, and go to state 72
    T_FLOAT       shift, and go to state 37
    T_IDENTIFIER  shift, and go to state 38
    T_LONG        shift, and go to state 39
    T_OCTET       shift, and go to state 40
    T_PRINCIPAL   shift, and go to state 73
    T_SCOPE       shift, and go to state 41
    T_SEQUENCE    shift, and go to state 74
    T_SHORT       shift, and go to state 42
    T_STRING      shift, and go to state 43
    T_STRUCT      shift, and go to state 6
    T_OBJECT      shift, and go to state 75
    T_UNION       shift, and go to state 8
    T_UNSIGNED    shift, and go to state 44
    T_WCHAR       shift, and go to state 45
    T_WSTRING     shift, and go to state 46
    T_VALUEBASE   shift, and go to state 76

    scoped_name            go to state 77
    type_spec              go to state 241
    simple_type_spec       go to state 79
    base_type_spec         go to state 80
    template_type_spec     go to state 81
    constr_type_spec       go to state 82
    floating_pt_type       go to state 83
    integer_type           go to state 84
    signed_int             go to state 51
    signed_short_int       go to state 52
    signed_long_int        go to state 53
    signed_longlong_int    go to state 54
    unsigned_int           go to state 55
    unsigned_short_int     go to state 56
    unsigned_long_int      go to state 57
    unsigned_longlong_int  go to state 58
    char_type              go to state 85
    wide_char_type         go to state 86
    boolean_type           go to state 87
    octet_type             go to state 88
    any_type               go to state 89
    object_type            go to state 90
    struct_type            go to state 91
    union_type             go to state 92
    enum_type              go to state 93
    sequence_type          go to state 94
    string_type            go to state 95
    wide_string_type       go to state 96
    fixed_pt_type          go to state 97
    value_base_type        go to state 98
    principal_type         go to state 99


State 162

   70 state_member: T_PRIVATE . type_spec declarators T_SEMICOLON

    T_ANY         shift, and go to state 71
    T_BOOLEAN     shift, and go to state 33
    T_CHAR        shift, and go to state 34
    T_DOUBLE      shift, and go to state 35
    T_ENUM        shift, and go to state 2
    T_FIXED       shift, and go to state 72
    T_FLOAT       shift, and go to state 37
    T_IDENTIFIER  shift, and go to state 38
    T_LONG        shift, and go to state 39
    T_OCTET       shift, and go to state 40
    T_PRINCIPAL   shift, and go to state 73
    T_SCOPE       shift, and go to state 41
    T_SEQUENCE    shift, and go to state 74
    T_SHORT       shift, and go to state 42
    T_STRING      shift, and go to state 43
    T_STRUCT      shift, and go to state 6
    T_OBJECT      shift, and go to state 75
    T_UNION       shift, and go to state 8
    T_UNSIGNED    shift, and go to state 44
    T_WCHAR       shift, and go to state 45
    T_WSTRING     shift, and go to state 46
    T_VALUEBASE   shift, and go to state 76

    scoped_name            go to state 77
    type_spec              go to state 242
    simple_type_spec       go to state 79
    base_type_spec         go to state 80
    template_type_spec     go to state 81
    constr_type_spec       go to state 82
    floating_pt_type       go to state 83
    integer_type           go to state 84
    signed_int             go to state 51
    signed_short_int       go to state 52
    signed_long_int        go to state 53
    signed_longlong_int    go to state 54
    unsigned_int           go to state 55
    unsigned_short_int     go to state 56
    unsigned_long_int      go to state 57
    unsigned_longlong_int  go to state 58
    char_type              go to state 85
    wide_char_type         go to state 86
    boolean_type           go to state 87
    octet_type             go to state 88
    any_type               go to state 89
    object_type            go to state 90
    struct_type            go to state 91
    union_type             go to state 92
    enum_type              go to state 93
    sequence_type          go to state 94
    string_type            go to state 95
    wide_string_type       go to state 96
    fixed_pt_type          go to state 97
    value_base_type        go to state 98
    principal_type         go to state 99


State 163

   71 init_dcl: T_FACTORY . T_IDENTIFIER T_LEFT_PARANTHESIS init_param_decls T_RIGHT_PARANTHESIS T_SEMICOLON

    T_IDENTIFIER  shift, and go to state 243


State 164

   66 value_element: export .

    $default  reduce using rule 66 (value_element)


State 165

   49 value_dcl: value_header T_LEFT_CURLY_BRACKET value_elements . T_RIGHT_CURLY_BRACKET

    T_RIGHT_CURLY_BRACKET  shift, and go to state 244


State 166

   51 value_elements: value_element .
   52               | value_element . value_elements

    T_ATTRIBUTE  shift, and go to state 148
    T_CONST      shift, and go to state 1
    T_ENUM       shift, and go to state 2
    T_EXCEPTION  shift, and go to state 3
    T_ONEWAY     shift, and go to state 149
    T_READONLY   shift, and go to state 150
    T_STRUCT     shift, and go to state 6
    T_TYPEDEF    shift, and go to state 7
    T_UNION      shift, and go to state 8
    T_PUBLIC     shift, and go to state 161
    T_PRIVATE    shift, and go to state 162
    T_FACTORY    shift, and go to state 163
    T_NATIVE     shift, and go to state 12

    T_RIGHT_CURLY_BRACKET  reduce using rule 51 (value_elements)
    $default               reduce using rule 215 (op_attribute)

    export          go to state 164
    value_elements  go to state 245
    value_element   go to state 166
    state_member    go to state 167
    init_dcl        go to state 168
    const_dcl       go to state 154
    type_dcl        go to state 155
    struct_type     go to state 29
    union_type      go to state 30
    enum_type       go to state 31
    attr_dcl        go to state 156
    except_dcl      go to state 157
    op_dcl          go to state 158
    op_attribute    go to state 159


State 167

   67 value_element: state_member .

    $default  reduce using rule 67 (value_element)


State 168

   68 value_element: init_dcl .

    $default  reduce using rule 68 (value_element)


State 169

  113 literal: T_CHARACTER_LITERAL .

    $default  reduce using rule 113 (literal)


State 170

  117 literal: T_FALSE .

    $default  reduce using rule 117 (literal)


State 171

  114 literal: T_FIXED_PT_LITERAL .

    $default  reduce using rule 114 (literal)


State 172

  115 literal: T_FLOATING_PT_LITERAL .

    $default  reduce using rule 115 (literal)


State 173

  111 literal: T_INTEGER_LITERAL .

    $default  reduce using rule 111 (literal)


State 174

  110 primary_expr: T_LEFT_PARANTHESIS . const_exp T_RIGHT_PARANTHESIS

    T_CHARACTER_LITERAL    shift, and go to state 169
    T_FALSE                shift, and go to state 170
    T_FIXED_PT_LITERAL     shift, and go to state 171
    T_FLOATING_PT_LITERAL  shift, and go to state 172
    T_IDENTIFIER           shift, and go to state 38
    T_INTEGER_LITERAL      shift, and go to state 173
    T_LEFT_PARANTHESIS     shift, and go to state 174
    T_MINUS_SIGN           shift, and go to state 175
    T_PLUS_SIGN            shift, and go to state 176
    T_SCOPE                shift, and go to state 41
    T_STRING_LITERAL       shift, and go to state 177
    T_TILDE                shift, and go to state 178
    T_TRUE                 shift, and go to state 179

    scoped_name       go to state 180
    const_exp         go to state 246
    or_expr           go to state 182
    xor_expr          go to state 183
    and_expr          go to state 184
    shift_expr        go to state 185
    add_expr          go to state 186
    mult_expr         go to state 187
    unary_expr        go to state 188
    primary_expr      go to state 189
    literal           go to state 190
    T_string_literal  go to state 192


State 175

  104 unary_expr: T_MINUS_SIGN . primary_expr

    T_CHARACTER_LITERAL    shift, and go to state 169
    T_FALSE                shift, and go to state 170
    T_FIXED_PT_LITERAL     shift, and go to state 171
    T_FLOATING_PT_LITERAL  shift, and go to state 172
    T_IDENTIFIER           shift, and go to state 38
    T_INTEGER_LITERAL      shift, and go to state 173
    T_LEFT_PARANTHESIS     shift, and go to state 174
    T_SCOPE                shift, and go to state 41
    T_STRING_LITERAL       shift, and go to state 177
    T_TRUE                 shift, and go to state 179

    scoped_name       go to state 180
    primary_expr      go to state 247
    literal           go to state 190
    T_string_literal  go to state 192


State 176

  105 unary_expr: T_PLUS_SIGN . primary_expr

    T_CHARACTER_LITERAL    shift, and go to state 169
    T_FALSE                shift, and go to state 170
    T_FIXED_PT_LITERAL     shift, and go to state 171
    T_FLOATING_PT_LITERAL  shift, and go to state 172
    T_IDENTIFIER           shift, and go to state 38
    T_INTEGER_LITERAL      shift, and go to state 173
    T_LEFT_PARANTHESIS     shift, and go to state 174
    T_SCOPE                shift, and go to state 41
    T_STRING_LITERAL       shift, and go to state 177
    T_TRUE                 shift, and go to state 179

    scoped_name       go to state 180
    primary_expr      go to state 248
    literal           go to state 190
    T_string_literal  go to state 192


State 177

  233 T_string_literal: T_STRING_LITERAL .
  234                 | T_STRING_LITERAL . T_string_literal

    T_STRING_LITERAL  shift, and go to state 177

    $default  reduce using rule 233 (T_string_literal)

    T_string_literal  go to state 249


State 178

  106 unary_expr: T_TILDE . primary_expr

    T_CHARACTER_LITERAL    shift, and go to state 169
    T_FALSE                shift, and go to state 170
    T_FIXED_PT_LITERAL     shift, and go to state 171
    T_FLOATING_PT_LITERAL  shift, and go to state 172
    T_IDENTIFIER           shift, and go to state 38
    T_INTEGER_LITERAL      shift, and go to state 173
    T_LEFT_PARANTHESIS     shift, and go to state 174
    T_SCOPE                shift, and go to state 41
    T_STRING_LITERAL       shift, and go to state 177
    T_TRUE                 shift, and go to state 179

    scoped_name       go to state 180
    primary_expr      go to state 250
    literal           go to state 190
    T_string_literal  go to state 192


State 179

  116 literal: T_TRUE .

    $default  reduce using rule 116 (literal)


State 180

   37 scoped_name: scoped_name . T_SCOPE T_IDENTIFIER
  108 primary_expr: scoped_name .

    T_SCOPE  shift, and go to state 124

    $default  reduce using rule 108 (primary_expr)


State 181

  118 positive_int_const: const_exp .

    $default  reduce using rule 118 (positive_int_const)


State 182

   87 const_exp: or_expr .
   89 or_expr: or_expr . T_VERTICAL_LINE xor_expr

    T_VERTICAL_LINE  shift, and go to state 251

    $default  reduce using rule 87 (const_exp)


State 183

   88 or_expr: xor_expr .
   91 xor_expr: xor_expr . T_CIRCUMFLEX and_expr

    T_CIRCUMFLEX  shift, and go to state 252

    $default  reduce using rule 88 (or_expr)


State 184

   90 xor_expr: and_expr .
   93 and_expr: and_expr . T_AMPERSAND shift_expr

    T_AMPERSAND  shift, and go to state 253

    $default  reduce using rule 90 (xor_expr)


State 185

   92 and_expr: shift_expr .
   95 shift_expr: shift_expr . T_SHIFTRIGHT add_expr
   96           | shift_expr . T_SHIFTLEFT add_expr

    T_SHIFTLEFT   shift, and go to state 254
    T_SHIFTRIGHT  shift, and go to state 255

    $default  reduce using rule 92 (and_expr)


State 186

   94 shift_expr: add_expr .
   98 add_expr: add_expr . T_PLUS_SIGN mult_expr
   99         | add_expr . T_MINUS_SIGN mult_expr

    T_MINUS_SIGN  shift, and go to state 256
    T_PLUS_SIGN   shift, and go to state 257

    $default  reduce using rule 94 (shift_expr)


State 187

   97 add_expr: mult_expr .
  101 mult_expr: mult_expr . T_ASTERISK unary_expr
  102          | mult_expr . T_SOLIDUS unary_expr
  103          | mult_expr . T_PERCENT_SIGN unary_expr

    T_ASTERISK      shift, and go to state 258
    T_PERCENT_SIGN  shift, and go to state 259
    T_SOLIDUS       shift, and go to state 260

    $default  reduce using rule 97 (add_expr)


State 188

  100 mult_expr: unary_expr .

    $default  reduce using rule 100 (mult_expr)


State 189

  107 unary_expr: primary_expr .

    $default  reduce using rule 107 (unary_expr)


State 190

  109 primary_expr: literal .

    $default  reduce using rule 109 (primary_expr)


State 191

  199 string_type: T_STRING T_LESS_THAN_SIGN positive_int_const . T_GREATER_THAN_SIGN

    T_GREATER_THAN_SIGN  shift, and go to state 261


State 192

  112 literal: T_string_literal .

    $default  reduce using rule 112 (literal)


State 193

  168 unsigned_longlong_int: T_UNSIGNED T_LONG T_LONG .

    $default  reduce using rule 168 (unsigned_longlong_int)


State 194

  201 wide_string_type: T_WSTRING T_LESS_THAN_SIGN positive_int_const . T_GREATER_THAN_SIGN

    T_GREATER_THAN_SIGN  shift, and go to state 262


State 195

   37 scoped_name: scoped_name T_SCOPE T_IDENTIFIER .

    $default  reduce using rule 37 (scoped_name)


State 196

   76 const_dcl: T_CONST const_type T_IDENTIFIER T_EQUAL . const_exp

    T_CHARACTER_LITERAL    shift, and go to state 169
    T_FALSE                shift, and go to state 170
    T_FIXED_PT_LITERAL     shift, and go to state 171
    T_FLOATING_PT_LITERAL  shift, and go to state 172
    T_IDENTIFIER           shift, and go to state 38
    T_INTEGER_LITERAL      shift, and go to state 173
    T_LEFT_PARANTHESIS     shift, and go to state 174
    T_MINUS_SIGN           shift, and go to state 175
    T_PLUS_SIGN            shift, and go to state 176
    T_SCOPE                shift, and go to state 41
    T_STRING_LITERAL       shift, and go to state 177
    T_TILDE                shift, and go to state 178
    T_TRUE                 shift, and go to state 179

    scoped_name       go to state 180
    const_exp         go to state 263
    or_expr           go to state 182
    xor_expr          go to state 183
    and_expr          go to state 184
    shift_expr        go to state 185
    add_expr          go to state 186
    mult_expr         go to state 187
    unary_expr        go to state 188
    primary_expr      go to state 189
    literal           go to state 190
    T_string_literal  go to state 192


State 197

  196 enumerator: T_IDENTIFIER .

    $default  reduce using rule 196 (enumerator)


State 198

  193 enum_type: T_ENUM T_IDENTIFIER T_LEFT_CURLY_BRACKET enumerators . T_RIGHT_CURLY_BRACKET

    T_RIGHT_CURLY_BRACKET  shift, and go to state 264


State 199

  194 enumerators: enumerator .
  195            | enumerator . T_COMMA enumerators

    T_COMMA  shift, and go to state 265

    $default  reduce using rule 194 (enumerators)


State 200

  178 member: type_spec . declarators T_SEMICOLON

    T_IDENTIFIER  shift, and go to state 134

    declarators         go to state 266
    declarator          go to state 136
    simple_declarator   go to state 137
    complex_declarator  go to state 138
    array_declarator    go to state 139


State 201

  213 members: member . members

    T_ANY         shift, and go to state 71
    T_BOOLEAN     shift, and go to state 33
    T_CHAR        shift, and go to state 34
    T_DOUBLE      shift, and go to state 35
    T_ENUM        shift, and go to state 2
    T_FIXED       shift, and go to state 72
    T_FLOAT       shift, and go to state 37
    T_IDENTIFIER  shift, and go to state 38
    T_LONG        shift, and go to state 39
    T_OCTET       shift, and go to state 40
    T_PRINCIPAL   shift, and go to state 73
    T_SCOPE       shift, and go to state 41
    T_SEQUENCE    shift, and go to state 74
    T_SHORT       shift, and go to state 42
    T_STRING      shift, and go to state 43
    T_STRUCT      shift, and go to state 6
    T_OBJECT      shift, and go to state 75
    T_UNION       shift, and go to state 8
    T_UNSIGNED    shift, and go to state 44
    T_WCHAR       shift, and go to state 45
    T_WSTRING     shift, and go to state 46
    T_VALUEBASE   shift, and go to state 76

    $default  reduce using rule 212 (members)

    scoped_name            go to state 77
    type_spec              go to state 200
    simple_type_spec       go to state 79
    base_type_spec         go to state 80
    template_type_spec     go to state 81
    constr_type_spec       go to state 82
    floating_pt_type       go to state 83
    integer_type           go to state 84
    signed_int             go to state 51
    signed_short_int       go to state 52
    signed_long_int        go to state 53
    signed_longlong_int    go to state 54
    unsigned_int           go to state 55
    unsigned_short_int     go to state 56
    unsigned_long_int      go to state 57
    unsigned_longlong_int  go to state 58
    char_type              go to state 85
    wide_char_type         go to state 86
    boolean_type           go to state 87
    octet_type             go to state 88
    any_type               go to state 89
    object_type            go to state 90
    struct_type            go to state 91
    member                 go to state 201
    union_type             go to state 92
    enum_type              go to state 93
    sequence_type          go to state 94
    string_type            go to state 95
    wide_string_type       go to state 96
    members                go to state 267
    fixed_pt_type          go to state 97
    value_base_type        go to state 98
    principal_type         go to state 99


State 202

  211 except_dcl: T_EXCEPTION T_IDENTIFIER T_LEFT_CURLY_BRACKET members . T_RIGHT_CURLY_BRACKET

    T_RIGHT_CURLY_BRACKET  shift, and go to state 268


State 203

   31 interface_inheritance_spec: T_COLON interface_names .

    $default  reduce using rule 31 (interface_inheritance_spec)


State 204

   32 interface_names: scoped_names .

    $default  reduce using rule 32 (interface_names)


State 205

   33 scoped_names: scoped_name .
   34             | scoped_name . T_COMMA scoped_names
   37 scoped_name: scoped_name . T_SCOPE T_IDENTIFIER

    T_COMMA  shift, and go to state 269
    T_SCOPE  shift, and go to state 124

    $default  reduce using rule 33 (scoped_names)


State 206

   12 module: T_MODULE T_IDENTIFIER T_LEFT_CURLY_BRACKET $@1 . definitions T_RIGHT_CURLY_BRACKET

    T_CONST      shift, and go to state 1
    T_ENUM       shift, and go to state 2
    T_EXCEPTION  shift, and go to state 3
    T_INTERFACE  shift, and go to state 4
    T_MODULE     shift, and go to state 5
    T_STRUCT     shift, and go to state 6
    T_TYPEDEF    shift, and go to state 7
    T_UNION      shift, and go to state 8
    T_ABSTRACT   shift, and go to state 9
    T_VALUETYPE  shift, and go to state 10
    T_CUSTOM     shift, and go to state 11
    T_NATIVE     shift, and go to state 12

    definitions        go to state 270
    definition         go to state 15
    module             go to state 16
    interface          go to state 17
    interface_dcl      go to state 18
    forward_dcl        go to state 19
    interface_header   go to state 20
    value              go to state 21
    value_forward_dcl  go to state 22
    value_box_dcl      go to state 23
    value_abs_dcl      go to state 24
    value_dcl          go to state 25
    value_header       go to state 26
    const_dcl          go to state 27
    type_dcl           go to state 28
    struct_type        go to state 29
    union_type         go to state 30
    enum_type          go to state 31
    except_dcl         go to state 32


State 207

  175 struct_type: T_STRUCT T_IDENTIFIER T_LEFT_CURLY_BRACKET member_list . T_RIGHT_CURLY_BRACKET

    T_RIGHT_CURLY_BRACKET  shift, and go to state 271


State 208

  176 member_list: member .
  177            | member . member_list

    T_ANY         shift, and go to state 71
    T_BOOLEAN     shift, and go to state 33
    T_CHAR        shift, and go to state 34
    T_DOUBLE      shift, and go to state 35
    T_ENUM        shift, and go to state 2
    T_FIXED       shift, and go to state 72
    T_FLOAT       shift, and go to state 37
    T_IDENTIFIER  shift, and go to state 38
    T_LONG        shift, and go to state 39
    T_OCTET       shift, and go to state 40
    T_PRINCIPAL   shift, and go to state 73
    T_SCOPE       shift, and go to state 41
    T_SEQUENCE    shift, and go to state 74
    T_SHORT       shift, and go to state 42
    T_STRING      shift, and go to state 43
    T_STRUCT      shift, and go to state 6
    T_OBJECT      shift, and go to state 75
    T_UNION       shift, and go to state 8
    T_UNSIGNED    shift, and go to state 44
    T_WCHAR       shift, and go to state 45
    T_WSTRING     shift, and go to state 46
    T_VALUEBASE   shift, and go to state 76

    $default  reduce using rule 176 (member_list)

    scoped_name            go to state 77
    type_spec              go to state 200
    simple_type_spec       go to state 79
    base_type_spec         go to state 80
    template_type_spec     go to state 81
    constr_type_spec       go to state 82
    floating_pt_type       go to state 83
    integer_type           go to state 84
    signed_int             go to state 51
    signed_short_int       go to state 52
    signed_long_int        go to state 53
    signed_longlong_int    go to state 54
    unsigned_int           go to state 55
    unsigned_short_int     go to state 56
    unsigned_long_int      go to state 57
    unsigned_longlong_int  go to state 58
    char_type              go to state 85
    wide_char_type         go to state 86
    boolean_type           go to state 87
    octet_type             go to state 88
    any_type               go to state 89
    object_type            go to state 90
    struct_type            go to state 91
    member_list            go to state 272
    member                 go to state 208
    union_type             go to state 92
    enum_type              go to state 93
    sequence_type          go to state 94
    string_type            go to state 95
    wide_string_type       go to state 96
    fixed_pt_type          go to state 97
    value_base_type        go to state 98
    principal_type         go to state 99


State 209

  239 fixed_pt_type: T_FIXED T_LESS_THAN_SIGN positive_int_const . T_COMMA T_INTEGER_LITERAL T_GREATER_THAN_SIGN

    T_COMMA  shift, and go to state 273


State 210

  197 sequence_type: T_SEQUENCE T_LESS_THAN_SIGN simple_type_spec . T_COMMA positive_int_const T_GREATER_THAN_SIGN
  198              | T_SEQUENCE T_LESS_THAN_SIGN simple_type_spec . T_GREATER_THAN_SIGN

    T_COMMA              shift, and go to state 274
    T_GREATER_THAN_SIGN  shift, and go to state 275


State 211

  206 fixed_array_size: T_LEFT_SQUARE_BRACKET . positive_int_const T_RIGHT_SQUARE_BRACKET

    T_CHARACTER_LITERAL    shift, and go to state 169
    T_FALSE                shift, and go to state 170
    T_FIXED_PT_LITERAL     shift, and go to state 171
    T_FLOATING_PT_LITERAL  shift, and go to state 172
    T_IDENTIFIER           shift, and go to state 38
    T_INTEGER_LITERAL      shift, and go to state 173
    T_LEFT_PARANTHESIS     shift, and go to state 174
    T_MINUS_SIGN           shift, and go to state 175
    T_PLUS_SIGN            shift, and go to state 176
    T_SCOPE                shift, and go to state 41
    T_STRING_LITERAL       shift, and go to state 177
    T_TILDE                shift, and go to state 178
    T_TRUE                 shift, and go to state 179

    scoped_name         go to state 180
    const_exp           go to state 181
    or_expr             go to state 182
    xor_expr            go to state 183
    and_expr            go to state 184
    shift_expr          go to state 185
    add_expr            go to state 186
    mult_expr           go to state 187
    unary_expr          go to state 188
    primary_expr        go to state 189
    literal             go to state 190
    positive_int_const  go to state 276
    T_string_literal    go to state 192


State 212

  203 array_declarator: T_IDENTIFIER fixed_array_sizes .

    $default  reduce using rule 203 (array_declarator)


State 213

  204 fixed_array_sizes: fixed_array_size .
  205                  | fixed_array_size . fixed_array_sizes

    T_LEFT_SQUARE_BRACKET  shift, and go to state 211

    $default  reduce using rule 204 (fixed_array_sizes)

    fixed_array_sizes  go to state 277
    fixed_array_size   go to state 213


State 214

  147 declarators: declarator T_COMMA . declarators

    T_IDENTIFIER  shift, and go to state 134

    declarators         go to state 278
    declarator          go to state 136
    simple_declarator   go to state 137
    complex_declarator  go to state 138
    array_declarator    go to state 139


State 215

  179 union_type: T_UNION T_IDENTIFIER T_SWITCH T_LEFT_PARANTHESIS . switch_type_spec T_RIGHT_PARANTHESIS T_LEFT_CURLY_BRACKET switch_body T_RIGHT_CURLY_BRACKET

    T_BOOLEAN     shift, and go to state 33
    T_CHAR        shift, and go to state 34
    T_ENUM        shift, and go to state 2
    T_IDENTIFIER  shift, and go to state 38
    T_LONG        shift, and go to state 279
    T_SCOPE       shift, and go to state 41
    T_SHORT       shift, and go to state 42
    T_UNSIGNED    shift, and go to state 44

    scoped_name            go to state 280
    integer_type           go to state 281
    signed_int             go to state 51
    signed_short_int       go to state 52
    signed_long_int        go to state 53
    signed_longlong_int    go to state 54
    unsigned_int           go to state 55
    unsigned_short_int     go to state 56
    unsigned_long_int      go to state 57
    unsigned_longlong_int  go to state 58
    char_type              go to state 282
    boolean_type           go to state 283
    switch_type_spec       go to state 284
    enum_type              go to state 285


State 216

   21 interface_header: T_ABSTRACT T_INTERFACE T_IDENTIFIER interface_inheritance_spec .

    $default  reduce using rule 21 (interface_header)


State 217

   45 value_abs_dcl: T_ABSTRACT T_VALUETYPE T_IDENTIFIER T_LEFT_CURLY_BRACKET . value_body T_RIGHT_CURLY_BRACKET

    T_ATTRIBUTE  shift, and go to state 148
    T_CONST      shift, and go to state 1
    T_ENUM       shift, and go to state 2
    T_EXCEPTION  shift, and go to state 3
    T_ONEWAY     shift, and go to state 149
    T_READONLY   shift, and go to state 150
    T_STRUCT     shift, and go to state 6
    T_TYPEDEF    shift, and go to state 7
    T_UNION      shift, and go to state 8
    T_NATIVE     shift, and go to state 12

    T_RIGHT_CURLY_BRACKET  reduce using rule 47 (value_body)
    $default               reduce using rule 215 (op_attribute)

    exports       go to state 286
    export        go to state 153
    value_body    go to state 287
    const_dcl     go to state 154
    type_dcl      go to state 155
    struct_type   go to state 29
    union_type    go to state 30
    enum_type     go to state 31
    attr_dcl      go to state 156
    except_dcl    go to state 157
    op_dcl        go to state 158
    op_attribute  go to state 159


State 218

   46 value_abs_dcl: T_ABSTRACT T_VALUETYPE T_IDENTIFIER value_inheritance_spec . T_LEFT_CURLY_BRACKET value_body T_RIGHT_CURLY_BRACKET

    T_LEFT_CURLY_BRACKET  shift, and go to state 288


State 219

   62 value_inheritance_bases: T_TRUNCATABLE . value_name
   63                        | T_TRUNCATABLE . value_name T_COMMA value_names

    T_IDENTIFIER  shift, and go to state 38
    T_SCOPE       shift, and go to state 41

    scoped_name  go to state 220
    value_name   go to state 289


State 220

   37 scoped_name: scoped_name . T_SCOPE T_IDENTIFIER
   65 value_name: scoped_name .

    T_SCOPE  shift, and go to state 124

    $default  reduce using rule 65 (value_name)


State 221

   57 value_inheritance_spec: T_COLON value_inheritance_bases .
   58                       | T_COLON value_inheritance_bases . T_SUPPORTS interface_names

    T_SUPPORTS  shift, and go to state 290

    $default  reduce using rule 57 (value_inheritance_spec)


State 222

   60 value_inheritance_bases: value_name .
   61                        | value_name . T_COMMA value_names

    T_COMMA  shift, and go to state 291

    $default  reduce using rule 60 (value_inheritance_bases)


State 223

   59 value_inheritance_spec: T_SUPPORTS interface_names .

    $default  reduce using rule 59 (value_inheritance_spec)


State 224

   54 value_header: T_CUSTOM T_VALUETYPE T_IDENTIFIER value_inheritance_spec .

    $default  reduce using rule 54 (value_header)


State 225

   37 scoped_name: scoped_name . T_SCOPE T_IDENTIFIER
  238 param_type_spec: scoped_name .

    T_SCOPE  shift, and go to state 124

    $default  reduce using rule 238 (param_type_spec)


State 226

  235 param_type_spec: base_type_spec .

    $default  reduce using rule 235 (param_type_spec)


State 227

  236 param_type_spec: string_type .

    $default  reduce using rule 236 (param_type_spec)


State 228

  237 param_type_spec: wide_string_type .

    $default  reduce using rule 237 (param_type_spec)


State 229

  207 attr_dcl: T_ATTRIBUTE param_type_spec . simple_declarators

    T_IDENTIFIER  shift, and go to state 105

    simple_declarator   go to state 292
    simple_declarators  go to state 293


State 230

  208 attr_dcl: T_READONLY T_ATTRIBUTE . param_type_spec simple_declarators

    T_ANY         shift, and go to state 71
    T_BOOLEAN     shift, and go to state 33
    T_CHAR        shift, and go to state 34
    T_DOUBLE      shift, and go to state 35
    T_FLOAT       shift, and go to state 37
    T_IDENTIFIER  shift, and go to state 38
    T_LONG        shift, and go to state 39
    T_OCTET       shift, and go to state 40
    T_PRINCIPAL   shift, and go to state 73
    T_SCOPE       shift, and go to state 41
    T_SHORT       shift, and go to state 42
    T_STRING      shift, and go to state 43
    T_OBJECT      shift, and go to state 75
    T_UNSIGNED    shift, and go to state 44
    T_WCHAR       shift, and go to state 45
    T_WSTRING     shift, and go to state 46
    T_VALUEBASE   shift, and go to state 76

    scoped_name            go to state 225
    base_type_spec         go to state 226
    floating_pt_type       go to state 83
    integer_type           go to state 84
    signed_int             go to state 51
    signed_short_int       go to state 52
    signed_long_int        go to state 53
    signed_longlong_int    go to state 54
    unsigned_int           go to state 55
    unsigned_short_int     go to state 56
    unsigned_long_int      go to state 57
    unsigned_longlong_int  go to state 58
    char_type              go to state 85
    wide_char_type         go to state 86
    boolean_type           go to state 87
    octet_type             go to state 88
    any_type               go to state 89
    object_type            go to state 90
    string_type            go to state 227
    wide_string_type       go to state 228
    param_type_spec        go to state 294
    value_base_type        go to state 98
    principal_type         go to state 99


State 231

   15 interface_dcl: interface_header T_LEFT_CURLY_BRACKET interface_body T_RIGHT_CURLY_BRACKET .

    $default  reduce using rule 15 (interface_dcl)


State 232

   25 exports: export exports .

    $default  reduce using rule 25 (exports)


State 233

   27 export: const_dcl T_SEMICOLON .

    $default  reduce using rule 27 (export)


State 234

   26 export: type_dcl T_SEMICOLON .

    $default  reduce using rule 26 (export)


State 235

   29 export: attr_dcl T_SEMICOLON .

    $default  reduce using rule 29 (export)


State 236

   28 export: except_dcl T_SEMICOLON .

    $default  reduce using rule 28 (export)


State 237

   30 export: op_dcl T_SEMICOLON .

    $default  reduce using rule 30 (export)


State 238

  218 op_type_spec: T_VOID .

    $default  reduce using rule 218 (op_type_spec)


State 239

  214 op_dcl: op_attribute op_type_spec . T_IDENTIFIER parameter_dcls raises_expr context_expr

    T_IDENTIFIER  shift, and go to state 295


State 240

  217 op_type_spec: param_type_spec .

    $default  reduce using rule 217 (op_type_spec)


State 241

   69 state_member: T_PUBLIC type_spec . declarators T_SEMICOLON

    T_IDENTIFIER  shift, and go to state 134

    declarators         go to state 296
    declarator          go to state 136
    simple_declarator   go to state 137
    complex_declarator  go to state 138
    array_declarator    go to state 139


State 242

   70 state_member: T_PRIVATE type_spec . declarators T_SEMICOLON

    T_IDENTIFIER  shift, and go to state 134

    declarators         go to state 297
    declarator          go to state 136
    simple_declarator   go to state 137
    complex_declarator  go to state 138
    array_declarator    go to state 139


State 243

   71 init_dcl: T_FACTORY T_IDENTIFIER . T_LEFT_PARANTHESIS init_param_decls T_RIGHT_PARANTHESIS T_SEMICOLON

    T_LEFT_PARANTHESIS  shift, and go to state 298


State 244

   49 value_dcl: value_header T_LEFT_CURLY_BRACKET value_elements T_RIGHT_CURLY_BRACKET .

    $default  reduce using rule 49 (value_dcl)


State 245

   52 value_elements: value_element value_elements .

    $default  reduce using rule 52 (value_elements)


State 246

  110 primary_expr: T_LEFT_PARANTHESIS const_exp . T_RIGHT_PARANTHESIS

    T_RIGHT_PARANTHESIS  shift, and go to state 299


State 247

  104 unary_expr: T_MINUS_SIGN primary_expr .

    $default  reduce using rule 104 (unary_expr)


State 248

  105 unary_expr: T_PLUS_SIGN primary_expr .

    $default  reduce using rule 105 (unary_expr)


State 249

  234 T_string_literal: T_STRING_LITERAL T_string_literal .

    $default  reduce using rule 234 (T_string_literal)


State 250

  106 unary_expr: T_TILDE primary_expr .

    $default  reduce using rule 106 (unary_expr)


State 251

   89 or_expr: or_expr T_VERTICAL_LINE . xor_expr

    T_CHARACTER_LITERAL    shift, and go to state 169
    T_FALSE                shift, and go to state 170
    T_FIXED_PT_LITERAL     shift, and go to state 171
    T_FLOATING_PT_LITERAL  shift, and go to state 172
    T_IDENTIFIER           shift, and go to state 38
    T_INTEGER_LITERAL      shift, and go to state 173
    T_LEFT_PARANTHESIS     shift, and go to state 174
    T_MINUS_SIGN           shift, and go to state 175
    T_PLUS_SIGN            shift, and go to state 176
    T_SCOPE                shift, and go to state 41
    T_STRING_LITERAL       shift, and go to state 177
    T_TILDE                shift, and go to state 178
    T_TRUE                 shift, and go to state 179

    scoped_name       go to state 180
    xor_expr          go to state 300
    and_expr          go to state 184
    shift_expr        go to state 185
    add_expr          go to state 186
    mult_expr         go to state 187
    unary_expr        go to state 188
    primary_expr      go to state 189
    literal           go to state 190
    T_string_literal  go to state 192


State 252

   91 xor_expr: xor_expr T_CIRCUMFLEX . and_expr

    T_CHARACTER_LITERAL    shift, and go to state 169
    T_FALSE                shift, and go to state 170
    T_FIXED_PT_LITERAL     shift, and go to state 171
    T_FLOATING_PT_LITERAL  shift, and go to state 172
    T_IDENTIFIER           shift, and go to state 38
    T_INTEGER_LITERAL      shift, and go to state 173
    T_LEFT_PARANTHESIS     shift, and go to state 174
    T_MINUS_SIGN           shift, and go to state 175
    T_PLUS_SIGN            shift, and go to state 176
    T_SCOPE                shift, and go to state 41
    T_STRING_LITERAL       shift, and go to state 177
    T_TILDE                shift, and go to state 178
    T_TRUE                 shift, and go to state 179

    scoped_name       go to state 180
    and_expr          go to state 301
    shift_expr        go to state 185
    add_expr          go to state 186
    mult_expr         go to state 187
    unary_expr        go to state 188
    primary_expr      go to state 189
    literal           go to state 190
    T_string_literal  go to state 192


State 253

   93 and_expr: and_expr T_AMPERSAND . shift_expr

    T_CHARACTER_LITERAL    shift, and go to state 169
    T_FALSE                shift, and go to state 170
    T_FIXED_PT_LITERAL     shift, and go to state 171
    T_FLOATING_PT_LITERAL  shift, and go to state 172
    T_IDENTIFIER           shift, and go to state 38
    T_INTEGER_LITERAL      shift, and go to state 173
    T_LEFT_PARANTHESIS     shift, and go to state 174
    T_MINUS_SIGN           shift, and go to state 175
    T_PLUS_SIGN            shift, and go to state 176
    T_SCOPE                shift, and go to state 41
    T_STRING_LITERAL       shift, and go to state 177
    T_TILDE                shift, and go to state 178
    T_TRUE                 shift, and go to state 179

    scoped_name       go to state 180
    shift_expr        go to state 302
    add_expr          go to state 186
    mult_expr         go to state 187
    unary_expr        go to state 188
    primary_expr      go to state 189
    literal           go to state 190
    T_string_literal  go to state 192


State 254

   96 shift_expr: shift_expr T_SHIFTLEFT . add_expr

    T_CHARACTER_LITERAL    shift, and go to state 169
    T_FALSE                shift, and go to state 170
    T_FIXED_PT_LITERAL     shift, and go to state 171
    T_FLOATING_PT_LITERAL  shift, and go to state 172
    T_IDENTIFIER           shift, and go to state 38
    T_INTEGER_LITERAL      shift, and go to state 173
    T_LEFT_PARANTHESIS     shift, and go to state 174
    T_MINUS_SIGN           shift, and go to state 175
    T_PLUS_SIGN            shift, and go to state 176
    T_SCOPE                shift, and go to state 41
    T_STRING_LITERAL       shift, and go to state 177
    T_TILDE                shift, and go to state 178
    T_TRUE                 shift, and go to state 179

    scoped_name       go to state 180
    add_expr          go to state 303
    mult_expr         go to state 187
    unary_expr        go to state 188
    primary_expr      go to state 189
    literal           go to state 190
    T_string_literal  go to state 192


State 255

   95 shift_expr: shift_expr T_SHIFTRIGHT . add_expr

    T_CHARACTER_LITERAL    shift, and go to state 169
    T_FALSE                shift, and go to state 170
    T_FIXED_PT_LITERAL     shift, and go to state 171
    T_FLOATING_PT_LITERAL  shift, and go to state 172
    T_IDENTIFIER           shift, and go to state 38
    T_INTEGER_LITERAL      shift, and go to state 173
    T_LEFT_PARANTHESIS     shift, and go to state 174
    T_MINUS_SIGN           shift, and go to state 175
    T_PLUS_SIGN            shift, and go to state 176
    T_SCOPE                shift, and go to state 41
    T_STRING_LITERAL       shift, and go to state 177
    T_TILDE                shift, and go to state 178
    T_TRUE                 shift, and go to state 179

    scoped_name       go to state 180
    add_expr          go to state 304
    mult_expr         go to state 187
    unary_expr        go to state 188
    primary_expr      go to state 189
    literal           go to state 190
    T_string_literal  go to state 192


State 256

   99 add_expr: add_expr T_MINUS_SIGN . mult_expr

    T_CHARACTER_LITERAL    shift, and go to state 169
    T_FALSE                shift, and go to state 170
    T_FIXED_PT_LITERAL     shift, and go to state 171
    T_FLOATING_PT_LITERAL  shift, and go to state 172
    T_IDENTIFIER           shift, and go to state 38
    T_INTEGER_LITERAL      shift, and go to state 173
    T_LEFT_PARANTHESIS     shift, and go to state 174
    T_MINUS_SIGN           shift, and go to state 175
    T_PLUS_SIGN            shift, and go to state 176
    T_SCOPE                shift, and go to state 41
    T_STRING_LITERAL       shift, and go to state 177
    T_TILDE                shift, and go to state 178
    T_TRUE                 shift, and go to state 179

    scoped_name       go to state 180
    mult_expr         go to state 305
    unary_expr        go to state 188
    primary_expr      go to state 189
    literal           go to state 190
    T_string_literal  go to state 192


State 257

   98 add_expr: add_expr T_PLUS_SIGN . mult_expr

    T_CHARACTER_LITERAL    shift, and go to state 169
    T_FALSE                shift, and go to state 170
    T_FIXED_PT_LITERAL     shift, and go to state 171
    T_FLOATING_PT_LITERAL  shift, and go to state 172
    T_IDENTIFIER           shift, and go to state 38
    T_INTEGER_LITERAL      shift, and go to state 173
    T_LEFT_PARANTHESIS     shift, and go to state 174
    T_MINUS_SIGN           shift, and go to state 175
    T_PLUS_SIGN            shift, and go to state 176
    T_SCOPE                shift, and go to state 41
    T_STRING_LITERAL       shift, and go to state 177
    T_TILDE                shift, and go to state 178
    T_TRUE                 shift, and go to state 179

    scoped_name       go to state 180
    mult_expr         go to state 306
    unary_expr        go to state 188
    primary_expr      go to state 189
    literal           go to state 190
    T_string_literal  go to state 192


State 258

  101 mult_expr: mult_expr T_ASTERISK . unary_expr

    T_CHARACTER_LITERAL    shift, and go to state 169
    T_FALSE                shift, and go to state 170
    T_FIXED_PT_LITERAL     shift, and go to state 171
    T_FLOATING_PT_LITERAL  shift, and go to state 172
    T_IDENTIFIER           shift, and go to state 38
    T_INTEGER_LITERAL      shift, and go to state 173
    T_LEFT_PARANTHESIS     shift, and go to state 174
    T_MINUS_SIGN           shift, and go to state 175
    T_PLUS_SIGN            shift, and go to state 176
    T_SCOPE                shift, and go to state 41
    T_STRING_LITERAL       shift, and go to state 177
    T_TILDE                shift, and go to state 178
    T_TRUE                 shift, and go to state 179

    scoped_name       go to state 180
    unary_expr        go to state 307
    primary_expr      go to state 189
    literal           go to state 190
    T_string_literal  go to state 192


State 259

  103 mult_expr: mult_expr T_PERCENT_SIGN . unary_expr

    T_CHARACTER_LITERAL    shift, and go to state 169
    T_FALSE                shift, and go to state 170
    T_FIXED_PT_LITERAL     shift, and go to state 171
    T_FLOATING_PT_LITERAL  shift, and go to state 172
    T_IDENTIFIER           shift, and go to state 38
    T_INTEGER_LITERAL      shift, and go to state 173
    T_LEFT_PARANTHESIS     shift, and go to state 174
    T_MINUS_SIGN           shift, and go to state 175
    T_PLUS_SIGN            shift, and go to state 176
    T_SCOPE                shift, and go to state 41
    T_STRING_LITERAL       shift, and go to state 177
    T_TILDE                shift, and go to state 178
    T_TRUE                 shift, and go to state 179

    scoped_name       go to state 180
    unary_expr        go to state 308
    primary_expr      go to state 189
    literal           go to state 190
    T_string_literal  go to state 192


State 260

  102 mult_expr: mult_expr T_SOLIDUS . unary_expr

    T_CHARACTER_LITERAL    shift, and go to state 169
    T_FALSE                shift, and go to state 170
    T_FIXED_PT_LITERAL     shift, and go to state 171
    T_FLOATING_PT_LITERAL  shift, and go to state 172
    T_IDENTIFIER           shift, and go to state 38
    T_INTEGER_LITERAL      shift, and go to state 173
    T_LEFT_PARANTHESIS     shift, and go to state 174
    T_MINUS_SIGN           shift, and go to state 175
    T_PLUS_SIGN            shift, and go to state 176
    T_SCOPE                shift, and go to state 41
    T_STRING_LITERAL       shift, and go to state 177
    T_TILDE                shift, and go to state 178
    T_TRUE                 shift, and go to state 179

    scoped_name       go to state 180
    unary_expr        go to state 309
    primary_expr      go to state 189
    literal           go to state 190
    T_string_literal  go to state 192


State 261

  199 string_type: T_STRING T_LESS_THAN_SIGN positive_int_const T_GREATER_THAN_SIGN .

    $default  reduce using rule 199 (string_type)


State 262

  201 wide_string_type: T_WSTRING T_LESS_THAN_SIGN positive_int_const T_GREATER_THAN_SIGN .

    $default  reduce using rule 201 (wide_string_type)


State 263

   76 const_dcl: T_CONST const_type T_IDENTIFIER T_EQUAL const_exp .

    $default  reduce using rule 76 (const_dcl)


State 264

  193 enum_type: T_ENUM T_IDENTIFIER T_LEFT_CURLY_BRACKET enumerators T_RIGHT_CURLY_BRACKET .

    $default  reduce using rule 193 (enum_type)


State 265

  195 enumerators: enumerator T_COMMA . enumerators

    T_IDENTIFIER  shift, and go to state 197

    enumerators  go to state 310
    enumerator   go to state 199


State 266

  178 member: type_spec declarators . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 311


State 267

  213 members: member members .

    $default  reduce using rule 213 (members)


State 268

  211 except_dcl: T_EXCEPTION T_IDENTIFIER T_LEFT_CURLY_BRACKET members T_RIGHT_CURLY_BRACKET .

    $default  reduce using rule 211 (except_dcl)


State 269

   34 scoped_names: scoped_name T_COMMA . scoped_names

    T_IDENTIFIER  shift, and go to state 38
    T_SCOPE       shift, and go to state 41

    scoped_names  go to state 312
    scoped_name   go to state 205


State 270

   12 module: T_MODULE T_IDENTIFIER T_LEFT_CURLY_BRACKET $@1 definitions . T_RIGHT_CURLY_BRACKET

    T_RIGHT_CURLY_BRACKET  shift, and go to state 313


State 271

  175 struct_type: T_STRUCT T_IDENTIFIER T_LEFT_CURLY_BRACKET member_list T_RIGHT_CURLY_BRACKET .

    $default  reduce using rule 175 (struct_type)


State 272

  177 member_list: member member_list .

    $default  reduce using rule 177 (member_list)


State 273

  239 fixed_pt_type: T_FIXED T_LESS_THAN_SIGN positive_int_const T_COMMA . T_INTEGER_LITERAL T_GREATER_THAN_SIGN

    T_INTEGER_LITERAL  shift, and go to state 314


State 274

  197 sequence_type: T_SEQUENCE T_LESS_THAN_SIGN simple_type_spec T_COMMA . positive_int_const T_GREATER_THAN_SIGN

    T_CHARACTER_LITERAL    shift, and go to state 169
    T_FALSE                shift, and go to state 170
    T_FIXED_PT_LITERAL     shift, and go to state 171
    T_FLOATING_PT_LITERAL  shift, and go to state 172
    T_IDENTIFIER           shift, and go to state 38
    T_INTEGER_LITERAL      shift, and go to state 173
    T_LEFT_PARANTHESIS     shift, and go to state 174
    T_MINUS_SIGN           shift, and go to state 175
    T_PLUS_SIGN            shift, and go to state 176
    T_SCOPE                shift, and go to state 41
    T_STRING_LITERAL       shift, and go to state 177
    T_TILDE                shift, and go to state 178
    T_TRUE                 shift, and go to state 179

    scoped_name         go to state 180
    const_exp           go to state 181
    or_expr             go to state 182
    xor_expr            go to state 183
    and_expr            go to state 184
    shift_expr          go to state 185
    add_expr            go to state 186
    mult_expr           go to state 187
    unary_expr          go to state 188
    primary_expr        go to state 189
    literal             go to state 190
    positive_int_const  go to state 315
    T_string_literal    go to state 192


State 275

  198 sequence_type: T_SEQUENCE T_LESS_THAN_SIGN simple_type_spec T_GREATER_THAN_SIGN .

    $default  reduce using rule 198 (sequence_type)


State 276

  206 fixed_array_size: T_LEFT_SQUARE_BRACKET positive_int_const . T_RIGHT_SQUARE_BRACKET

    T_RIGHT_SQUARE_BRACKET  shift, and go to state 316


State 277

  205 fixed_array_sizes: fixed_array_size fixed_array_sizes .

    $default  reduce using rule 205 (fixed_array_sizes)


State 278

  147 declarators: declarator T_COMMA declarators .

    $default  reduce using rule 147 (declarators)


State 279

  161 signed_long_int: T_LONG .
  162 signed_longlong_int: T_LONG . T_LONG

    T_LONG  shift, and go to state 118

    $default  reduce using rule 161 (signed_long_int)


State 280

   37 scoped_name: scoped_name . T_SCOPE T_IDENTIFIER
  184 switch_type_spec: scoped_name .

    T_SCOPE  shift, and go to state 124

    $default  reduce using rule 184 (switch_type_spec)


State 281

  180 switch_type_spec: integer_type .

    $default  reduce using rule 180 (switch_type_spec)


State 282

  181 switch_type_spec: char_type .

    $default  reduce using rule 181 (switch_type_spec)


State 283

  182 switch_type_spec: boolean_type .

    $default  reduce using rule 182 (switch_type_spec)


State 284

  179 union_type: T_UNION T_IDENTIFIER T_SWITCH T_LEFT_PARANTHESIS switch_type_spec . T_RIGHT_PARANTHESIS T_LEFT_CURLY_BRACKET switch_body T_RIGHT_CURLY_BRACKET

    T_RIGHT_PARANTHESIS  shift, and go to state 317


State 285

  183 switch_type_spec: enum_type .

    $default  reduce using rule 183 (switch_type_spec)


State 286

   48 value_body: exports .

    $default  reduce using rule 48 (value_body)


State 287

   45 value_abs_dcl: T_ABSTRACT T_VALUETYPE T_IDENTIFIER T_LEFT_CURLY_BRACKET value_body . T_RIGHT_CURLY_BRACKET

    T_RIGHT_CURLY_BRACKET  shift, and go to state 318


State 288

   46 value_abs_dcl: T_ABSTRACT T_VALUETYPE T_IDENTIFIER value_inheritance_spec T_LEFT_CURLY_BRACKET . value_body T_RIGHT_CURLY_BRACKET

    T_ATTRIBUTE  shift, and go to state 148
    T_CONST      shift, and go to state 1
    T_ENUM       shift, and go to state 2
    T_EXCEPTION  shift, and go to state 3
    T_ONEWAY     shift, and go to state 149
    T_READONLY   shift, and go to state 150
    T_STRUCT     shift, and go to state 6
    T_TYPEDEF    shift, and go to state 7
    T_UNION      shift, and go to state 8
    T_NATIVE     shift, and go to state 12

    T_RIGHT_CURLY_BRACKET  reduce using rule 47 (value_body)
    $default               reduce using rule 215 (op_attribute)

    exports       go to state 286
    export        go to state 153
    value_body    go to state 319
    const_dcl     go to state 154
    type_dcl      go to state 155
    struct_type   go to state 29
    union_type    go to state 30
    enum_type     go to state 31
    attr_dcl      go to state 156
    except_dcl    go to state 157
    op_dcl        go to state 158
    op_attribute  go to state 159


State 289

   62 value_inheritance_bases: T_TRUNCATABLE value_name .
   63                        | T_TRUNCATABLE value_name . T_COMMA value_names

    T_COMMA  shift, and go to state 320

    $default  reduce using rule 62 (value_inheritance_bases)


State 290

   58 value_inheritance_spec: T_COLON value_inheritance_bases T_SUPPORTS . interface_names

    T_IDENTIFIER  shift, and go to state 38
    T_SCOPE       shift, and go to state 41

    interface_names  go to state 321
    scoped_names     go to state 204
    scoped_name      go to state 205


State 291

   61 value_inheritance_bases: value_name T_COMMA . value_names

    T_IDENTIFIER  shift, and go to state 38
    T_SCOPE       shift, and go to state 41

    scoped_names  go to state 322
    scoped_name   go to state 205
    value_names   go to state 323


State 292

  209 simple_declarators: simple_declarator .
  210                   | simple_declarator . T_COMMA simple_declarators

    T_COMMA  shift, and go to state 324

    $default  reduce using rule 209 (simple_declarators)


State 293

  207 attr_dcl: T_ATTRIBUTE param_type_spec simple_declarators .

    $default  reduce using rule 207 (attr_dcl)


State 294

  208 attr_dcl: T_READONLY T_ATTRIBUTE param_type_spec . simple_declarators

    T_IDENTIFIER  shift, and go to state 105

    simple_declarator   go to state 292
    simple_declarators  go to state 325


State 295

  214 op_dcl: op_attribute op_type_spec T_IDENTIFIER . parameter_dcls raises_expr context_expr

    T_LEFT_PARANTHESIS  shift, and go to state 326

    parameter_dcls  go to state 327


State 296

   69 state_member: T_PUBLIC type_spec declarators . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 328


State 297

   70 state_member: T_PRIVATE type_spec declarators . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 329


State 298

   71 init_dcl: T_FACTORY T_IDENTIFIER T_LEFT_PARANTHESIS . init_param_decls T_RIGHT_PARANTHESIS T_SEMICOLON

    T_IN  shift, and go to state 330

    init_param_decls      go to state 331
    init_param_decl       go to state 332
    init_param_attribute  go to state 333


State 299

  110 primary_expr: T_LEFT_PARANTHESIS const_exp T_RIGHT_PARANTHESIS .

    $default  reduce using rule 110 (primary_expr)


State 300

   89 or_expr: or_expr T_VERTICAL_LINE xor_expr .
   91 xor_expr: xor_expr . T_CIRCUMFLEX and_expr

    T_CIRCUMFLEX  shift, and go to state 252

    $default  reduce using rule 89 (or_expr)


State 301

   91 xor_expr: xor_expr T_CIRCUMFLEX and_expr .
   93 and_expr: and_expr . T_AMPERSAND shift_expr

    T_AMPERSAND  shift, and go to state 253

    $default  reduce using rule 91 (xor_expr)


State 302

   93 and_expr: and_expr T_AMPERSAND shift_expr .
   95 shift_expr: shift_expr . T_SHIFTRIGHT add_expr
   96           | shift_expr . T_SHIFTLEFT add_expr

    T_SHIFTLEFT   shift, and go to state 254
    T_SHIFTRIGHT  shift, and go to state 255

    $default  reduce using rule 93 (and_expr)


State 303

   96 shift_expr: shift_expr T_SHIFTLEFT add_expr .
   98 add_expr: add_expr . T_PLUS_SIGN mult_expr
   99         | add_expr . T_MINUS_SIGN mult_expr

    T_MINUS_SIGN  shift, and go to state 256
    T_PLUS_SIGN   shift, and go to state 257

    $default  reduce using rule 96 (shift_expr)


State 304

   95 shift_expr: shift_expr T_SHIFTRIGHT add_expr .
   98 add_expr: add_expr . T_PLUS_SIGN mult_expr
   99         | add_expr . T_MINUS_SIGN mult_expr

    T_MINUS_SIGN  shift, and go to state 256
    T_PLUS_SIGN   shift, and go to state 257

    $default  reduce using rule 95 (shift_expr)


State 305

   99 add_expr: add_expr T_MINUS_SIGN mult_expr .
  101 mult_expr: mult_expr . T_ASTERISK unary_expr
  102          | mult_expr . T_SOLIDUS unary_expr
  103          | mult_expr . T_PERCENT_SIGN unary_expr

    T_ASTERISK      shift, and go to state 258
    T_PERCENT_SIGN  shift, and go to state 259
    T_SOLIDUS       shift, and go to state 260

    $default  reduce using rule 99 (add_expr)


State 306

   98 add_expr: add_expr T_PLUS_SIGN mult_expr .
  101 mult_expr: mult_expr . T_ASTERISK unary_expr
  102          | mult_expr . T_SOLIDUS unary_expr
  103          | mult_expr . T_PERCENT_SIGN unary_expr

    T_ASTERISK      shift, and go to state 258
    T_PERCENT_SIGN  shift, and go to state 259
    T_SOLIDUS       shift, and go to state 260

    $default  reduce using rule 98 (add_expr)


State 307

  101 mult_expr: mult_expr T_ASTERISK unary_expr .

    $default  reduce using rule 101 (mult_expr)


State 308

  103 mult_expr: mult_expr T_PERCENT_SIGN unary_expr .

    $default  reduce using rule 103 (mult_expr)


State 309

  102 mult_expr: mult_expr T_SOLIDUS unary_expr .

    $default  reduce using rule 102 (mult_expr)


State 310

  195 enumerators: enumerator T_COMMA enumerators .

    $default  reduce using rule 195 (enumerators)


State 311

  178 member: type_spec declarators T_SEMICOLON .

    $default  reduce using rule 178 (member)


State 312

   34 scoped_names: scoped_name T_COMMA scoped_names .

    $default  reduce using rule 34 (scoped_names)


State 313

   12 module: T_MODULE T_IDENTIFIER T_LEFT_CURLY_BRACKET $@1 definitions T_RIGHT_CURLY_BRACKET .

    $default  reduce using rule 12 (module)


State 314

  239 fixed_pt_type: T_FIXED T_LESS_THAN_SIGN positive_int_const T_COMMA T_INTEGER_LITERAL . T_GREATER_THAN_SIGN

    T_GREATER_THAN_SIGN  shift, and go to state 334


State 315

  197 sequence_type: T_SEQUENCE T_LESS_THAN_SIGN simple_type_spec T_COMMA positive_int_const . T_GREATER_THAN_SIGN

    T_GREATER_THAN_SIGN  shift, and go to state 335


State 316

  206 fixed_array_size: T_LEFT_SQUARE_BRACKET positive_int_const T_RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 206 (fixed_array_size)


State 317

  179 union_type: T_UNION T_IDENTIFIER T_SWITCH T_LEFT_PARANTHESIS switch_type_spec T_RIGHT_PARANTHESIS . T_LEFT_CURLY_BRACKET switch_body T_RIGHT_CURLY_BRACKET

    T_LEFT_CURLY_BRACKET  shift, and go to state 336


State 318

   45 value_abs_dcl: T_ABSTRACT T_VALUETYPE T_IDENTIFIER T_LEFT_CURLY_BRACKET value_body T_RIGHT_CURLY_BRACKET .

    $default  reduce using rule 45 (value_abs_dcl)


State 319

   46 value_abs_dcl: T_ABSTRACT T_VALUETYPE T_IDENTIFIER value_inheritance_spec T_LEFT_CURLY_BRACKET value_body . T_RIGHT_CURLY_BRACKET

    T_RIGHT_CURLY_BRACKET  shift, and go to state 337


State 320

   63 value_inheritance_bases: T_TRUNCATABLE value_name T_COMMA . value_names

    T_IDENTIFIER  shift, and go to state 38
    T_SCOPE       shift, and go to state 41

    scoped_names  go to state 322
    scoped_name   go to state 205
    value_names   go to state 338


State 321

   58 value_inheritance_spec: T_COLON value_inheritance_bases T_SUPPORTS interface_names .

    $default  reduce using rule 58 (value_inheritance_spec)


State 322

   64 value_names: scoped_names .

    $default  reduce using rule 64 (value_names)


State 323

   61 value_inheritance_bases: value_name T_COMMA value_names .

    $default  reduce using rule 61 (value_inheritance_bases)


State 324

  210 simple_declarators: simple_declarator T_COMMA . simple_declarators

    T_IDENTIFIER  shift, and go to state 105

    simple_declarator   go to state 292
    simple_declarators  go to state 339


State 325

  208 attr_dcl: T_READONLY T_ATTRIBUTE param_type_spec simple_declarators .

    $default  reduce using rule 208 (attr_dcl)


State 326

  219 parameter_dcls: T_LEFT_PARANTHESIS . param_dcls T_RIGHT_PARANTHESIS
  220               | T_LEFT_PARANTHESIS . T_RIGHT_PARANTHESIS

    T_IN                 shift, and go to state 340
    T_INOUT              shift, and go to state 341
    T_OUT                shift, and go to state 342
    T_RIGHT_PARANTHESIS  shift, and go to state 343

    param_dcls       go to state 344
    param_dcl        go to state 345
    param_attribute  go to state 346


State 327

  214 op_dcl: op_attribute op_type_spec T_IDENTIFIER parameter_dcls . raises_expr context_expr

    T_RAISES  shift, and go to state 347

    $default  reduce using rule 227 (raises_expr)

    raises_expr  go to state 348


State 328

   69 state_member: T_PUBLIC type_spec declarators T_SEMICOLON .

    $default  reduce using rule 69 (state_member)


State 329

   70 state_member: T_PRIVATE type_spec declarators T_SEMICOLON .

    $default  reduce using rule 70 (state_member)


State 330

   75 init_param_attribute: T_IN .

    $default  reduce using rule 75 (init_param_attribute)


State 331

   71 init_dcl: T_FACTORY T_IDENTIFIER T_LEFT_PARANTHESIS init_param_decls . T_RIGHT_PARANTHESIS T_SEMICOLON

    T_RIGHT_PARANTHESIS  shift, and go to state 349


State 332

   72 init_param_decls: init_param_decl .
   73                 | init_param_decl . T_COMMA init_param_decls

    T_COMMA  shift, and go to state 350

    $default  reduce using rule 72 (init_param_decls)


State 333

   74 init_param_decl: init_param_attribute . param_type_spec simple_declarator

    T_ANY         shift, and go to state 71
    T_BOOLEAN     shift, and go to state 33
    T_CHAR        shift, and go to state 34
    T_DOUBLE      shift, and go to state 35
    T_FLOAT       shift, and go to state 37
    T_IDENTIFIER  shift, and go to state 38
    T_LONG        shift, and go to state 39
    T_OCTET       shift, and go to state 40
    T_PRINCIPAL   shift, and go to state 73
    T_SCOPE       shift, and go to state 41
    T_SHORT       shift, and go to state 42
    T_STRING      shift, and go to state 43
    T_OBJECT      shift, and go to state 75
    T_UNSIGNED    shift, and go to state 44
    T_WCHAR       shift, and go to state 45
    T_WSTRING     shift, and go to state 46
    T_VALUEBASE   shift, and go to state 76

    scoped_name            go to state 225
    base_type_spec         go to state 226
    floating_pt_type       go to state 83
    integer_type           go to state 84
    signed_int             go to state 51
    signed_short_int       go to state 52
    signed_long_int        go to state 53
    signed_longlong_int    go to state 54
    unsigned_int           go to state 55
    unsigned_short_int     go to state 56
    unsigned_long_int      go to state 57
    unsigned_longlong_int  go to state 58
    char_type              go to state 85
    wide_char_type         go to state 86
    boolean_type           go to state 87
    octet_type             go to state 88
    any_type               go to state 89
    object_type            go to state 90
    string_type            go to state 227
    wide_string_type       go to state 228
    param_type_spec        go to state 351
    value_base_type        go to state 98
    principal_type         go to state 99


State 334

  239 fixed_pt_type: T_FIXED T_LESS_THAN_SIGN positive_int_const T_COMMA T_INTEGER_LITERAL T_GREATER_THAN_SIGN .

    $default  reduce using rule 239 (fixed_pt_type)


State 335

  197 sequence_type: T_SEQUENCE T_LESS_THAN_SIGN simple_type_spec T_COMMA positive_int_const T_GREATER_THAN_SIGN .

    $default  reduce using rule 197 (sequence_type)


State 336

  179 union_type: T_UNION T_IDENTIFIER T_SWITCH T_LEFT_PARANTHESIS switch_type_spec T_RIGHT_PARANTHESIS T_LEFT_CURLY_BRACKET . switch_body T_RIGHT_CURLY_BRACKET

    T_CASE     shift, and go to state 352
    T_DEFAULT  shift, and go to state 353

    switch_body  go to state 354
    case         go to state 355
    case_label   go to state 356


State 337

   46 value_abs_dcl: T_ABSTRACT T_VALUETYPE T_IDENTIFIER value_inheritance_spec T_LEFT_CURLY_BRACKET value_body T_RIGHT_CURLY_BRACKET .

    $default  reduce using rule 46 (value_abs_dcl)


State 338

   63 value_inheritance_bases: T_TRUNCATABLE value_name T_COMMA value_names .

    $default  reduce using rule 63 (value_inheritance_bases)


State 339

  210 simple_declarators: simple_declarator T_COMMA simple_declarators .

    $default  reduce using rule 210 (simple_declarators)


State 340

  224 param_attribute: T_IN .

    $default  reduce using rule 224 (param_attribute)


State 341

  226 param_attribute: T_INOUT .

    $default  reduce using rule 226 (param_attribute)


State 342

  225 param_attribute: T_OUT .

    $default  reduce using rule 225 (param_attribute)


State 343

  220 parameter_dcls: T_LEFT_PARANTHESIS T_RIGHT_PARANTHESIS .

    $default  reduce using rule 220 (parameter_dcls)


State 344

  219 parameter_dcls: T_LEFT_PARANTHESIS param_dcls . T_RIGHT_PARANTHESIS

    T_RIGHT_PARANTHESIS  shift, and go to state 357


State 345

  221 param_dcls: param_dcl .
  222           | param_dcl . T_COMMA param_dcls

    T_COMMA  shift, and go to state 358

    $default  reduce using rule 221 (param_dcls)


State 346

  223 param_dcl: param_attribute . param_type_spec simple_declarator

    T_ANY         shift, and go to state 71
    T_BOOLEAN     shift, and go to state 33
    T_CHAR        shift, and go to state 34
    T_DOUBLE      shift, and go to state 35
    T_FLOAT       shift, and go to state 37
    T_IDENTIFIER  shift, and go to state 38
    T_LONG        shift, and go to state 39
    T_OCTET       shift, and go to state 40
    T_PRINCIPAL   shift, and go to state 73
    T_SCOPE       shift, and go to state 41
    T_SHORT       shift, and go to state 42
    T_STRING      shift, and go to state 43
    T_OBJECT      shift, and go to state 75
    T_UNSIGNED    shift, and go to state 44
    T_WCHAR       shift, and go to state 45
    T_WSTRING     shift, and go to state 46
    T_VALUEBASE   shift, and go to state 76

    scoped_name            go to state 225
    base_type_spec         go to state 226
    floating_pt_type       go to state 83
    integer_type           go to state 84
    signed_int             go to state 51
    signed_short_int       go to state 52
    signed_long_int        go to state 53
    signed_longlong_int    go to state 54
    unsigned_int           go to state 55
    unsigned_short_int     go to state 56
    unsigned_long_int      go to state 57
    unsigned_longlong_int  go to state 58
    char_type              go to state 85
    wide_char_type         go to state 86
    boolean_type           go to state 87
    octet_type             go to state 88
    any_type               go to state 89
    object_type            go to state 90
    string_type            go to state 227
    wide_string_type       go to state 228
    param_type_spec        go to state 359
    value_base_type        go to state 98
    principal_type         go to state 99


State 347

  228 raises_expr: T_RAISES . T_LEFT_PARANTHESIS scoped_names T_RIGHT_PARANTHESIS

    T_LEFT_PARANTHESIS  shift, and go to state 360


State 348

  214 op_dcl: op_attribute op_type_spec T_IDENTIFIER parameter_dcls raises_expr . context_expr

    T_CONTEXT  shift, and go to state 361

    $default  reduce using rule 229 (context_expr)

    context_expr  go to state 362


State 349

   71 init_dcl: T_FACTORY T_IDENTIFIER T_LEFT_PARANTHESIS init_param_decls T_RIGHT_PARANTHESIS . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 363


State 350

   73 init_param_decls: init_param_decl T_COMMA . init_param_decls

    T_IN  shift, and go to state 330

    init_param_decls      go to state 364
    init_param_decl       go to state 332
    init_param_attribute  go to state 333


State 351

   74 init_param_decl: init_param_attribute param_type_spec . simple_declarator

    T_IDENTIFIER  shift, and go to state 105

    simple_declarator  go to state 365


State 352

  190 case_label: T_CASE . const_exp T_COLON

    T_CHARACTER_LITERAL    shift, and go to state 169
    T_FALSE                shift, and go to state 170
    T_FIXED_PT_LITERAL     shift, and go to state 171
    T_FLOATING_PT_LITERAL  shift, and go to state 172
    T_IDENTIFIER           shift, and go to state 38
    T_INTEGER_LITERAL      shift, and go to state 173
    T_LEFT_PARANTHESIS     shift, and go to state 174
    T_MINUS_SIGN           shift, and go to state 175
    T_PLUS_SIGN            shift, and go to state 176
    T_SCOPE                shift, and go to state 41
    T_STRING_LITERAL       shift, and go to state 177
    T_TILDE                shift, and go to state 178
    T_TRUE                 shift, and go to state 179

    scoped_name       go to state 180
    const_exp         go to state 366
    or_expr           go to state 182
    xor_expr          go to state 183
    and_expr          go to state 184
    shift_expr        go to state 185
    add_expr          go to state 186
    mult_expr         go to state 187
    unary_expr        go to state 188
    primary_expr      go to state 189
    literal           go to state 190
    T_string_literal  go to state 192


State 353

  191 case_label: T_DEFAULT . T_COLON

    T_COLON  shift, and go to state 367


State 354

  179 union_type: T_UNION T_IDENTIFIER T_SWITCH T_LEFT_PARANTHESIS switch_type_spec T_RIGHT_PARANTHESIS T_LEFT_CURLY_BRACKET switch_body . T_RIGHT_CURLY_BRACKET

    T_RIGHT_CURLY_BRACKET  shift, and go to state 368


State 355

  185 switch_body: case .
  186            | case . switch_body

    T_CASE     shift, and go to state 352
    T_DEFAULT  shift, and go to state 353

    $default  reduce using rule 185 (switch_body)

    switch_body  go to state 369
    case         go to state 355
    case_label   go to state 356


State 356

  187 case: case_label . case
  188     | case_label . element_spec T_SEMICOLON
  189     | case_label . T_PRAGMA element_spec T_SEMICOLON

    T_ANY         shift, and go to state 71
    T_BOOLEAN     shift, and go to state 33
    T_CASE        shift, and go to state 352
    T_CHAR        shift, and go to state 34
    T_DEFAULT     shift, and go to state 353
    T_DOUBLE      shift, and go to state 35
    T_ENUM        shift, and go to state 2
    T_FIXED       shift, and go to state 72
    T_FLOAT       shift, and go to state 37
    T_IDENTIFIER  shift, and go to state 38
    T_LONG        shift, and go to state 39
    T_OCTET       shift, and go to state 40
    T_PRINCIPAL   shift, and go to state 73
    T_SCOPE       shift, and go to state 41
    T_SEQUENCE    shift, and go to state 74
    T_SHORT       shift, and go to state 42
    T_STRING      shift, and go to state 43
    T_PRAGMA      shift, and go to state 370
    T_STRUCT      shift, and go to state 6
    T_OBJECT      shift, and go to state 75
    T_UNION       shift, and go to state 8
    T_UNSIGNED    shift, and go to state 44
    T_WCHAR       shift, and go to state 45
    T_WSTRING     shift, and go to state 46
    T_VALUEBASE   shift, and go to state 76

    scoped_name            go to state 77
    type_spec              go to state 371
    simple_type_spec       go to state 79
    base_type_spec         go to state 80
    template_type_spec     go to state 81
    constr_type_spec       go to state 82
    floating_pt_type       go to state 83
    integer_type           go to state 84
    signed_int             go to state 51
    signed_short_int       go to state 52
    signed_long_int        go to state 53
    signed_longlong_int    go to state 54
    unsigned_int           go to state 55
    unsigned_short_int     go to state 56
    unsigned_long_int      go to state 57
    unsigned_longlong_int  go to state 58
    char_type              go to state 85
    wide_char_type         go to state 86
    boolean_type           go to state 87
    octet_type             go to state 88
    any_type               go to state 89
    object_type            go to state 90
    struct_type            go to state 91
    union_type             go to state 92
    case                   go to state 372
    case_label             go to state 356
    element_spec           go to state 373
    enum_type              go to state 93
    sequence_type          go to state 94
    string_type            go to state 95
    wide_string_type       go to state 96
    fixed_pt_type          go to state 97
    value_base_type        go to state 98
    principal_type         go to state 99


State 357

  219 parameter_dcls: T_LEFT_PARANTHESIS param_dcls T_RIGHT_PARANTHESIS .

    $default  reduce using rule 219 (parameter_dcls)


State 358

  222 param_dcls: param_dcl T_COMMA . param_dcls

    T_IN     shift, and go to state 340
    T_INOUT  shift, and go to state 341
    T_OUT    shift, and go to state 342

    param_dcls       go to state 374
    param_dcl        go to state 345
    param_attribute  go to state 346


State 359

  223 param_dcl: param_attribute param_type_spec . simple_declarator

    T_IDENTIFIER  shift, and go to state 105

    simple_declarator  go to state 375


State 360

  228 raises_expr: T_RAISES T_LEFT_PARANTHESIS . scoped_names T_RIGHT_PARANTHESIS

    T_IDENTIFIER  shift, and go to state 38
    T_SCOPE       shift, and go to state 41

    scoped_names  go to state 376
    scoped_name   go to state 205


State 361

  230 context_expr: T_CONTEXT . T_LEFT_PARANTHESIS string_literals T_RIGHT_PARANTHESIS

    T_LEFT_PARANTHESIS  shift, and go to state 377


State 362

  214 op_dcl: op_attribute op_type_spec T_IDENTIFIER parameter_dcls raises_expr context_expr .

    $default  reduce using rule 214 (op_dcl)


State 363

   71 init_dcl: T_FACTORY T_IDENTIFIER T_LEFT_PARANTHESIS init_param_decls T_RIGHT_PARANTHESIS T_SEMICOLON .

    $default  reduce using rule 71 (init_dcl)


State 364

   73 init_param_decls: init_param_decl T_COMMA init_param_decls .

    $default  reduce using rule 73 (init_param_decls)


State 365

   74 init_param_decl: init_param_attribute param_type_spec simple_declarator .

    $default  reduce using rule 74 (init_param_decl)


State 366

  190 case_label: T_CASE const_exp . T_COLON

    T_COLON  shift, and go to state 378


State 367

  191 case_label: T_DEFAULT T_COLON .

    $default  reduce using rule 191 (case_label)


State 368

  179 union_type: T_UNION T_IDENTIFIER T_SWITCH T_LEFT_PARANTHESIS switch_type_spec T_RIGHT_PARANTHESIS T_LEFT_CURLY_BRACKET switch_body T_RIGHT_CURLY_BRACKET .

    $default  reduce using rule 179 (union_type)


State 369

  186 switch_body: case switch_body .

    $default  reduce using rule 186 (switch_body)


State 370

  189 case: case_label T_PRAGMA . element_spec T_SEMICOLON

    T_ANY         shift, and go to state 71
    T_BOOLEAN     shift, and go to state 33
    T_CHAR        shift, and go to state 34
    T_DOUBLE      shift, and go to state 35
    T_ENUM        shift, and go to state 2
    T_FIXED       shift, and go to state 72
    T_FLOAT       shift, and go to state 37
    T_IDENTIFIER  shift, and go to state 38
    T_LONG        shift, and go to state 39
    T_OCTET       shift, and go to state 40
    T_PRINCIPAL   shift, and go to state 73
    T_SCOPE       shift, and go to state 41
    T_SEQUENCE    shift, and go to state 74
    T_SHORT       shift, and go to state 42
    T_STRING      shift, and go to state 43
    T_STRUCT      shift, and go to state 6
    T_OBJECT      shift, and go to state 75
    T_UNION       shift, and go to state 8
    T_UNSIGNED    shift, and go to state 44
    T_WCHAR       shift, and go to state 45
    T_WSTRING     shift, and go to state 46
    T_VALUEBASE   shift, and go to state 76

    scoped_name            go to state 77
    type_spec              go to state 371
    simple_type_spec       go to state 79
    base_type_spec         go to state 80
    template_type_spec     go to state 81
    constr_type_spec       go to state 82
    floating_pt_type       go to state 83
    integer_type           go to state 84
    signed_int             go to state 51
    signed_short_int       go to state 52
    signed_long_int        go to state 53
    signed_longlong_int    go to state 54
    unsigned_int           go to state 55
    unsigned_short_int     go to state 56
    unsigned_long_int      go to state 57
    unsigned_longlong_int  go to state 58
    char_type              go to state 85
    wide_char_type         go to state 86
    boolean_type           go to state 87
    octet_type             go to state 88
    any_type               go to state 89
    object_type            go to state 90
    struct_type            go to state 91
    union_type             go to state 92
    element_spec           go to state 379
    enum_type              go to state 93
    sequence_type          go to state 94
    string_type            go to state 95
    wide_string_type       go to state 96
    fixed_pt_type          go to state 97
    value_base_type        go to state 98
    principal_type         go to state 99


State 371

  192 element_spec: type_spec . declarator

    T_IDENTIFIER  shift, and go to state 134

    declarator          go to state 380
    simple_declarator   go to state 137
    complex_declarator  go to state 138
    array_declarator    go to state 139


State 372

  187 case: case_label case .

    $default  reduce using rule 187 (case)


State 373

  188 case: case_label element_spec . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 381


State 374

  222 param_dcls: param_dcl T_COMMA param_dcls .

    $default  reduce using rule 222 (param_dcls)


State 375

  223 param_dcl: param_attribute param_type_spec simple_declarator .

    $default  reduce using rule 223 (param_dcl)


State 376

  228 raises_expr: T_RAISES T_LEFT_PARANTHESIS scoped_names . T_RIGHT_PARANTHESIS

    T_RIGHT_PARANTHESIS  shift, and go to state 382


State 377

  230 context_expr: T_CONTEXT T_LEFT_PARANTHESIS . string_literals T_RIGHT_PARANTHESIS

    T_STRING_LITERAL  shift, and go to state 177

    string_literals   go to state 383
    T_string_literal  go to state 384


State 378

  190 case_label: T_CASE const_exp T_COLON .

    $default  reduce using rule 190 (case_label)


State 379

  189 case: case_label T_PRAGMA element_spec . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 385


State 380

  192 element_spec: type_spec declarator .

    $default  reduce using rule 192 (element_spec)


State 381

  188 case: case_label element_spec T_SEMICOLON .

    $default  reduce using rule 188 (case)


State 382

  228 raises_expr: T_RAISES T_LEFT_PARANTHESIS scoped_names T_RIGHT_PARANTHESIS .

    $default  reduce using rule 228 (raises_expr)


State 383

  230 context_expr: T_CONTEXT T_LEFT_PARANTHESIS string_literals . T_RIGHT_PARANTHESIS

    T_RIGHT_PARANTHESIS  shift, and go to state 386


State 384

  231 string_literals: T_string_literal .
  232                | T_string_literal . T_COMMA string_literals

    T_COMMA  shift, and go to state 387

    $default  reduce using rule 231 (string_literals)


State 385

  189 case: case_label T_PRAGMA element_spec T_SEMICOLON .

    $default  reduce using rule 189 (case)


State 386

  230 context_expr: T_CONTEXT T_LEFT_PARANTHESIS string_literals T_RIGHT_PARANTHESIS .

    $default  reduce using rule 230 (context_expr)


State 387

  232 string_literals: T_string_literal T_COMMA . string_literals

    T_STRING_LITERAL  shift, and go to state 177

    string_literals   go to state 388
    T_string_literal  go to state 384


State 388

  232 string_literals: T_string_literal T_COMMA string_literals .

    $default  reduce using rule 232 (string_literals)
