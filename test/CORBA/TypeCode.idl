module CORBA {
enum TCKind
 {
	tk_null, tk_void,
	tk_short, tk_long, tk_ushort, tk_ulong,
	tk_float, tk_double, tk_boolean, tk_char,
	tk_octet, tk_any, tk_TypeCode, tk_Principal, tk_objref,
	tk_struct, tk_union, tk_enum, tk_string,
	tk_sequence, tk_array, tk_alias, tk_except,
	tk_longlong, tk_ulonglong, tk_longdouble,
	tk_wchar, tk_wstring, tk_fixed,
	tk_value, tk_value_box,
	tk_native,
	tk_abstract_interface,
	tk_local_interface,
	tk_component, tk_home,
	tk_event
};
typedef short ValueModifier;
const ValueModifier VM_NONE = 0;
const ValueModifier VM_CUSTOM = 1;
const ValueModifier VM_ABSTRACT = 2;
const ValueModifier VM_TRUNCATABLE = 3;
interface TypeCode
 {
	exception Bounds {};
	exception BadKind {};
	// for all TypeCode kinds
	boolean equal (in TypeCode tc);
	boolean equivalent (in TypeCode tc);
	TypeCode get_compact_typecode ();
	TCKind kind ();
	// for tk_objref, tk_struct, tk_union, tk_enum, tk_alias,
	// tk_value, tk_value_box, tk_native, tk_abstract_interface
	// tk_local_interface, tk_except
	// tk_component, tk_home and tk_event
	RepositoryId id () raises (BadKind);
	// for tk_objref, tk_struct, tk_union, tk_enum, tk_alias,
	// tk_value, tk_value_box, tk_native, tk_abstract_interface
	// tk_local_interface, tk_except
	// tk_component, tk_home and tk_event
	Identifier name () raises (BadKind);
	// for tk_struct, tk_union, tk_enum, tk_value,
	// tk_except and tk_event
	unsigned long member_count () raises (BadKind);
	Identifier member_name (in unsigned long index)
		raises (BadKind, Bounds);
	// for tk_struct, tk_union, tk_value,
	// tk_except and tk_event
	TypeCode member_type (in unsigned long index)
		raises (BadKind, Bounds);
	// for tk_union
	any member_label (in unsigned long index)
		raises (BadKind, Bounds);
	TypeCode discriminator_type () raises (BadKind);
	long default_index () raises (BadKind);
	// for tk_string, tk_wstring, tk_sequence, and tk_array
	unsigned long length () raises (BadKind);
	// for tk_sequence, tk_array, tk_value_box and tk_alias
	TypeCode content_type () raises (BadKind);
	// for tk_fixed
	unsigned short fixed_digits () raises (BadKind);
	short fixed_scale () raises (BadKind);
	// for tk_value and tk_event
	Visibility member_visibility (in unsigned long index)
		raises (BadKind, Bounds);
	ValueModifier type_modifier () raises (BadKind);
	TypeCode concrete_base_type () raises (BadKind);
};
};